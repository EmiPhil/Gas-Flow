/* Generated by the Nim Compiler v1.0.6 */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI207300 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI207302 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI207055 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI207142 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI206632 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI206642 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI206640 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI206638 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI206636 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI206634 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI206644 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI205015 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI206646 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI206040 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI205033 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI206559 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI205037 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI205035 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI206472 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI206046 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI206044 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI206042 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI206048 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3642 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3646 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3608 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3714 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3708 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3626 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3628 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3658 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI124 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI208015 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NNI208015 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI124, name: "Field2", sons: null}]};
NTI208015.node = NNI208015;
var NNI3658 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3658.node = NNI3658;
var NNI3628 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3628.node = NNI3628;
NTI3708.base = NTI3626;
NTI3714.base = NTI3626;
var NNI3626 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3708, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI114, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI3714, name: "up", sons: null}]};
NTI3626.node = NNI3626;
var NNI3608 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3608.node = NNI3608;
NTI3626.base = NTI3608;
NTI3628.base = NTI3626;
NTI3658.base = NTI3628;
var NNI3646 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3646.node = NNI3646;
var NNI3642 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3642.node = NNI3642;
NTI3642.base = NTI3628;
NTI3646.base = NTI3642;
var NNI206042 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI124, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI124, name: "Field3", sons: null}]};
NTI206042.node = NNI206042;
var NNI206044 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI206044.node = NNI206044;
var NNI206046 = {kind: 2, len: 1, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}]};
NTI206046.node = NNI206046;
var NNI206048 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI206042, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI206044, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI206046, name: "Field2", sons: null}]};
NTI206048.node = NNI206048;
var NNI206472 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI205035, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI205037, name: "Field1", sons: null}]};
NTI206472.node = NNI206472;
var NNI206559 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI205033, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI138, name: "Field2", sons: null}]};
NTI206559.node = NNI206559;
var NNI206040 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI124, name: "Field2", sons: null}]};
NTI206040.node = NNI206040;
var NNI206644 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI124, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI124, name: "Field3", sons: null}]};
NTI206644.node = NNI206644;
var NNI206646 = {kind: 2, len: 13, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI205015, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI205035, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI205037, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI206644, name: "Field3", sons: null}, 
{kind: 1, offset: "Field4", len: 0, typ: NTI206634, name: "Field4", sons: null}, 
{kind: 1, offset: "Field5", len: 0, typ: NTI206636, name: "Field5", sons: null}, 
{kind: 1, offset: "Field6", len: 0, typ: NTI206638, name: "Field6", sons: null}, 
{kind: 1, offset: "Field7", len: 0, typ: NTI206640, name: "Field7", sons: null}, 
{kind: 1, offset: "Field8", len: 0, typ: NTI206640, name: "Field8", sons: null}, 
{kind: 1, offset: "Field9", len: 0, typ: NTI206642, name: "Field9", sons: null}, 
{kind: 1, offset: "Field10", len: 0, typ: NTI206632, name: "Field10", sons: null}, 
{kind: 1, offset: "Field11", len: 0, typ: NTI124, name: "Field11", sons: null}, 
{kind: 1, offset: "Field12", len: 0, typ: NTI124, name: "Field12", sons: null}]};
NTI206646.node = NNI206646;
var NNI207142 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI207055, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI207055, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI207055, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI207055, name: "Field3", sons: null}, 
{kind: 1, offset: "Field4", len: 0, typ: NTI207055, name: "Field4", sons: null}]};
NTI207142.node = NNI207142;
var NNI207302 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI207055, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI207300, name: "Field1", sons: null}]};
NTI207302.node = NNI207302;
				var ki_205371 = [4.6192549999999999e-01, 4.4791530000000002e-01, 4.5574890000000001e-01, 5.2792090000000003e-01, 5.8374899999999996e-01, 6.4069370000000003e-01, 6.3414230000000005e-01, 6.7385770000000000e-01, 6.7983070000000001e-01, 7.1751180000000003e-01, 7.5251889999999999e-01, 7.8495499999999996e-01, 8.1527309999999997e-01, 8.4378260000000005e-01, 3.5149160000000002e-01, 4.1869540000000000e-01, 4.5338940000000000e-01, 3.8258680000000000e-01, 4.6182630000000002e-01, 3.5898880000000000e-01, 4.2165510000000000e-01];
				var ei_205144 = [1.5131829999999999e+02, 9.9737780000000001e+01, 2.4196060000000000e+02, 2.4416669999999999e+02, 2.9811829999999998e+02, 3.2406889999999999e+02, 3.3763889999999998e+02, 3.6559989999999999e+02, 3.7068230000000000e+02, 4.0263629300000002e+02, 4.2772262999999998e+02, 4.5032502199999999e+02, 4.7084089100000000e+02, 4.8955837300000002e+02, 2.6957940000000001e+01, 1.2276670000000000e+02, 1.0553480000000000e+02, 5.1401559999999995e+02, 2.9635500000000002e+02, 2.6101109999999998e+00, 1.1962990000000001e+02];
													var gn_205110 = [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0];
												var gij_205364 = [[1.0000000000000000e+00, 1.0000000000000000e+00, 8.0765299999999995e-01, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.9573100000000001e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 9.8274600000000001e-01, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 3.7029600000000001e-01, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.6730900000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00]];
												var gi_205378 = [0.0, 2.7814999999999999e-02, 1.8906500000000001e-01, 7.9299999999999995e-02, 1.4123900000000000e-01, 2.5669199999999998e-01, 2.8183500000000000e-01, 3.3226699999999998e-01, 3.6691099999999999e-01, 2.8973100000000002e-01, 3.3754200000000001e-01, 3.8338100000000003e-01, 4.2735400000000001e-01, 4.6965899999999999e-01, 3.4368999999999997e-02, 2.1000000000000001e-02, 3.8953000000000002e-02, 3.3250000000000002e-01, 8.8499999999999995e-02, 0.0, 0.0];
													var qn_205118 = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1];
												var qi_205385 = [0.0, 0.0, 6.8999999999999995e-01, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0677500000000000e+00, 6.3327599999999995e-01, 0.0, 0.0];
													var fn_205102 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
												var fi_205392 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0000000000000000e+00, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
													var sn_205126 = [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
												var si_205399 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5822000000000001e+00, 3.9000000000000001e-01, 0.0, 0.0];
													var wn_205134 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
												var wi_205406 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0000000000000000e+00, 0.0, 0.0, 0.0];
												var an_205068 = [1.5383260000000001e-01, 1.3419530000000000e+00, -2.9985830000000000e+00, -4.8312279999999999e-02, 3.7579649999999998e-01, -1.5895750000000000e+00, -5.3588469999999999e-02, 8.8659463000000005e-01, -7.1023703999999999e-01, -1.4717220000000000e+00, 1.3218503500000001e+00, -7.8665925000000003e-01, 2.2912899999999998e-09, 1.5767239999999999e-01, -4.3638640000000001e-01, -4.4081589999999997e-02, -3.4338880000000000e-03, 3.2059049999999999e-02, 2.4873550000000001e-02, 7.3322789999999999e-02, -1.6005730000000001e-03, 6.4247060000000000e-01, -4.1626010000000002e-01, -6.6899570000000005e-02, 2.7917950000000002e-01, -6.9660509999999998e-01, -2.8605890000000002e-03, -8.0988359999999999e-03, 3.1505470000000000e+00, 7.2244789999999998e-03, -7.0575290000000002e-01, 5.3497919999999999e-01, -7.9314910000000002e-02, -1.4184650000000001e+00, -5.9990499999999998e-17, 1.0584020000000000e-01, 3.4317290000000000e-02, -7.0228469999999996e-03, 2.4955870000000002e-02, 4.2968180000000002e-02, 7.4654529999999997e-01, -2.9196129999999998e-01, 7.2946160000000004e+00, -9.9367570000000001e+00, -5.3998079999999999e-03, -2.4325669999999999e-01, 4.9870159999999997e-02, 3.7337970000000001e-03, 1.8749510000000000e+00, 2.1681439999999999e-03, -6.5871639999999998e-01, 2.0551799999999999e-04, 9.7761949999999997e-03, -2.0487080000000001e-02, 1.5573220000000000e-02, 6.8624150000000002e-03, -1.2267520000000000e-03, 2.8509080000000001e-03];
												var eij_205202 = [[1.0000000000000000e+00, 9.7163999999999995e-01, 9.6064400000000005e-01, 1.0000000000000000e+00, 9.9463500000000005e-01, 1.0195300000000000e+00, 9.8984399999999995e-01, 1.0023500000000001e+00, 9.9926800000000005e-01, 1.1072740000000001e+00, 8.8088000000000000e-01, 8.8097300000000001e-01, 8.8106700000000004e-01, 8.8116099999999997e-01, 1.1705200000000000e+00, 1.0000000000000000e+00, 9.9012599999999995e-01, 7.0821800000000001e-01, 9.3148399999999998e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0227400000000000e+00, 9.7011999999999998e-01, 9.4593899999999997e-01, 9.4691400000000003e-01, 9.7338400000000003e-01, 9.5933999999999997e-01, 9.4552000000000003e-01, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0863200000000000e+00, 1.0209999999999999e+00, 1.0057100000000001e+00, 7.4695400000000001e-01, 9.0227100000000005e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.2505300000000001e-01, 9.6023700000000001e-01, 9.0684900000000002e-01, 8.9736199999999999e-01, 7.2625499999999998e-01, 8.5976399999999997e-01, 8.5513399999999995e-01, 8.3122900000000000e-01, 8.0830999999999997e-01, 7.8632299999999999e-01, 7.6517100000000005e-01, 1.2817900000000000e+00, 1.0000000000000000e+00, 1.5000000000000000e+00, 8.4940800000000005e-01, 9.5505200000000001e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0225599999999999e+00, 1.0000000000000000e+00, 1.0130600000000001e+00, 1.0000000000000000e+00, 1.0053200000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.1644600000000001e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 6.9316800000000001e-01, 9.4687100000000002e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0048999999999999e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0347869999999999e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.3000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.3000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0086919999999999e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0101260000000001e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0115010000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0128210000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0140890000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.1000000000000001e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00]];
												var un_205094 = [0.0, 5.0000000000000000e-01, 1.0000000000000000e+00, 3.5000000000000000e+00, -5.0000000000000000e-01, 4.5000000000000000e+00, 5.0000000000000000e-01, 7.5000000000000000e+00, 9.5000000000000000e+00, 6.0000000000000000e+00, 1.2000000000000000e+01, 1.2500000000000000e+01, -6.0000000000000000e+00, 2.0000000000000000e+00, 3.0000000000000000e+00, 2.0000000000000000e+00, 2.0000000000000000e+00, 1.1000000000000000e+01, -5.0000000000000000e-01, 5.0000000000000000e-01, 0.0, 4.0000000000000000e+00, 6.0000000000000000e+00, 2.1000000000000000e+01, 2.3000000000000000e+01, 2.2000000000000000e+01, -1.0000000000000000e+00, -5.0000000000000000e-01, 7.0000000000000000e+00, -1.0000000000000000e+00, 6.0000000000000000e+00, 4.0000000000000000e+00, 1.0000000000000000e+00, 9.0000000000000000e+00, -1.3000000000000000e+01, 2.1000000000000000e+01, 8.0000000000000000e+00, -5.0000000000000000e-01, 0.0, 2.0000000000000000e+00, 7.0000000000000000e+00, 9.0000000000000000e+00, 2.2000000000000000e+01, 2.3000000000000000e+01, 1.0000000000000000e+00, 9.0000000000000000e+00, 3.0000000000000000e+00, 8.0000000000000000e+00, 2.3000000000000000e+01, 1.5000000000000000e+00, 5.0000000000000000e+00, -5.0000000000000000e-01, 4.0000000000000000e+00, 7.0000000000000000e+00, 3.0000000000000000e+00, 0.0, 1.0000000000000000e+00, 0.0];
								var kij_205310 = [[1.0000000000000000e+00, 1.0036300000000000e+00, 9.9593299999999996e-01, 1.0000000000000000e+00, 1.0076190000000000e+00, 1.0000000000000000e+00, 9.9759600000000004e-01, 1.0000000000000000e+00, 1.0025290000000000e+00, 9.8296200000000000e-01, 9.8356500000000002e-01, 9.8270700000000000e-01, 9.8184899999999997e-01, 9.8099099999999995e-01, 1.0232600000000001e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000800000000001e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 9.8236100000000004e-01, 1.0079600000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0322700000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.4259599999999999e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0085100000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.1018299999999996e-01, 8.9536199999999999e-01, 8.8115200000000005e-01, 8.6751999999999996e-01, 8.5440600000000000e-01, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0077900000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.8689300000000002e-01, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0203400000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.9996900000000000e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.6813000000000005e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.6287000000000000e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.5782800000000001e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.5244099999999998e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.4833800000000001e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00]];
								var uij_205256 = [[1.0000000000000000e+00, 8.8610599999999995e-01, 9.6382699999999999e-01, 1.0000000000000000e+00, 9.9087700000000001e-01, 1.0000000000000000e+00, 9.9229100000000003e-01, 1.0000000000000000e+00, 1.0036700000000001e+00, 1.3025760000000000e+00, 1.1919040000000001e+00, 1.2057690000000001e+00, 1.2196340000000001e+00, 1.2334980000000000e+00, 1.1563900000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 7.3683299999999996e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 8.3505799999999997e-01, 8.1643100000000002e-01, 9.1550200000000004e-01, 1.0000000000000000e+00, 9.9355599999999999e-01, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 4.0883799999999998e-01, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.9347600000000003e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.6987000000000001e-01, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0666380000000000e+00, 1.0776340000000000e+00, 1.0881780000000001e+00, 1.0982909999999999e+00, 1.1080209999999999e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.0000000000000002e-01, 1.0000000000000000e+00, 1.0452900000000001e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0651729999999999e+00, 1.2500000000000000e+00, 1.2500000000000000e+00, 1.2500000000000000e+00, 1.2500000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.6166600000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.7192599999999996e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0289729999999999e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0337540000000001e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0383380000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0427350000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0469660000000001e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00]];

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_24827, src_24828, ti_24829) {
	var result_25019 = null;

		switch (ti_24829.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_24801(ti_24829))) {
			result_25019 = src_24828;
			}
			else {
				result_25019 = [src_24828[0], src_24828[1]];
			}
			
			break;
		case 19:
			      if (dest_24827 === null || dest_24827 === undefined) {
        dest_24827 = {};
      }
      else {
        for (var key in dest_24827) { delete dest_24827[key]; }
      }
      for (var key in src_24828) { dest_24827[key] = src_24828[key]; }
      result_25019 = dest_24827;
    
			break;
		case 18:
		case 17:
			if (!((ti_24829.base == null))) {
			result_25019 = nimCopy(dest_24827, src_24828, ti_24829.base);
			}
			else {
			if ((ti_24829.kind == 17)) {
			result_25019 = (dest_24827 === null || dest_24827 === undefined) ? {m_type: ti_24829} : dest_24827;
			}
			else {
				result_25019 = (dest_24827 === null || dest_24827 === undefined) ? {} : dest_24827;
			}
			}
			nimCopyAux(result_25019, src_24828, ti_24829.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_24828 === null) {
        result_25019 = null;
      }
      else {
        if (dest_24827 === null || dest_24827 === undefined) {
          dest_24827 = new Array(src_24828.length);
        }
        else {
          dest_24827.length = src_24828.length;
        }
        result_25019 = dest_24827;
        for (var i = 0; i < src_24828.length; ++i) {
          result_25019[i] = nimCopy(result_25019[i], src_24828[i], ti_24829.base);
        }
      }
    
			break;
		case 28:
			      if (src_24828 !== null) {
        result_25019 = src_24828.slice(0);
      }
    
			break;
		default: 
			result_25019 = src_24828;
			break;
		}

	return result_25019;

}

function makeNimstrLit(c_23270) {
		  var ln = c_23270.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_23270.charCodeAt(i);
  }
  return result;
  

	
}

function cstrToNimstr(c_23287) {
		  var ln = c_23287.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_23287.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_23287.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_23304) {
										var Tmp5;
						var Tmp7;

	var result_23305 = null;

		var res_23363 = new_seq_23336((s_23304 != null ? s_23304.length : 0));
		var i_23365 = 0;
		var j_23367 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_23365 < (s_23304 != null ? s_23304.length : 0))) break L2;
					var c_23368 = s_23304[i_23365];
					if ((c_23368 < 128)) {
					res_23363[j_23367] = String.fromCharCode(c_23368);
					i_23365 += 1;
					}
					else {
						var helper_23391 = new_seq_23336(0);
						L3: do {
								L4: while (true) {
								if (!true) break L4;
									var code_23392 = c_23368.toString(16);
									if (((code_23392 != null ? code_23392.length : 0) == 1)) {
									if (helper_23391 != null) { helper_23391.push("%0"); } else { helper_23391 = ["%0"]; };
									}
									else {
									if (helper_23391 != null) { helper_23391.push("%"); } else { helper_23391 = ["%"]; };
									}
									
									if (helper_23391 != null) { helper_23391.push(code_23392); } else { helper_23391 = [code_23392]; };
									i_23365 += 1;
										if (((s_23304 != null ? s_23304.length : 0) <= i_23365)) Tmp5 = true; else {											Tmp5 = (s_23304[i_23365] < 128);										}									if (Tmp5) {
									break L3;
									}
									
									c_23368 = s_23304[i_23365];
								}
						} while(false);
++excHandler;
						Tmp7 = framePtr;
						try {
						res_23363[j_23367] = decodeURIComponent(helper_23391.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
						framePtr = Tmp7;
						res_23363[j_23367] = helper_23391.join("");
						lastJSError = prevJSError;
						} finally {
						framePtr = Tmp7;
						}
					}
					
					j_23367 += 1;
				}
		} while(false);
		if (res_23363 === null) res_23363 = [];
               if (res_23363.length < j_23367) { for (var i=res_23363.length;i<j_23367;++i) res_23363.push(null); }
               else { res_23363.length = j_23367; };
		result_23305 = res_23363.join("");

	return result_23305;

}

function raiseException(e_21618, ename_21619) {
		e_21618.name = ename_21619;
		if ((excHandler == 0)) {
		unhandledException(e_21618);
		}
		
		throw e_21618;

	
}

function chckIndx(i_25105, a_25106, b_25107) {
			var Tmp1;

	var result_25108 = 0;

	BeforeRet: do {
			if (!(a_25106 <= i_25105)) Tmp1 = false; else {				Tmp1 = (i_25105 <= b_25107);			}		if (Tmp1) {
		result_25108 = i_25105;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_25105, a_25106, b_25107);
		}
		
	} while (false);

	return result_25108;

}

function addInt(a_23803, b_23804) {
		    var result = a_23803 + b_23804;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function subInt(a_23821, b_23822) {
		    var result = a_23821 - b_23822;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
						var kn_205087 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 2, 2, 4, 4, 0, 0, 2, 2, 2, 4, 4, 4, 4, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 0, 0, 2, 2, 2, 4, 4, 0, 2, 2, 4, 4, 0, 2, 0, 2, 1, 2, 2, 2, 2];
						var bn_205079 = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 7, 7, 8, 8, 8, 9, 9];
						var molar_masses_205029 = [1.6042999999999999e+01, 2.8013500000000001e+01, 4.4009999999999998e+01, 3.0070000000000000e+01, 4.4097000000000001e+01, 5.8122999999999998e+01, 5.8122999999999998e+01, 7.2150000000000006e+01, 7.2150000000000006e+01, 8.6177000000000007e+01, 1.0020399999999999e+02, 1.1423099999999999e+02, 1.2825800000000001e+02, 1.4228500000000000e+02, 2.0158999999999998e+00, 3.1998799999999999e+01, 2.8010000000000002e+01, 1.8015300000000000e+01, 3.4082000000000001e+01, 4.0026000000000002e+00, 3.9948000000000000e+01];
												var th0i_205636 = [[1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 8.2065899999999999e+02, 1.7841000000000000e+02, 1.0628199999999999e+03, 1.0905300000000000e+03], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 6.6273800000000006e+02, 6.8056200000000001e+02, 1.7400599999999999e+03, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.1930600000000004e+02, 8.6507000000000005e+02, 4.8355300000000000e+02, 3.4110899999999998e+02], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 5.5931399999999996e+02, 2.2328399999999999e+02, 1.0313800000000001e+03, 1.0712900000000000e+03], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 4.7985599999999999e+02, 2.0089300000000000e+02, 9.5531200000000001e+02, 1.0272900000000000e+03], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 4.3826999999999998e+02, 1.9801800000000000e+02, 1.9050200000000000e+03, 8.9376499999999999e+02], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 4.6826999999999998e+02, 1.8363600000000000e+02, 1.9140999999999999e+03, 9.0318499999999995e+02], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 2.9250299999999999e+02, 9.1023699999999997e+02, 1.9193699999999999e+03, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.7866999999999999e+02, 8.4053800000000001e+02, 1.7742500000000000e+03, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.8232599999999999e+02, 8.5920699999999999e+02, 1.8265899999999999e+03, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.6978899999999999e+02, 8.3619500000000005e+02, 1.7604600000000000e+03, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.5892200000000000e+02, 8.1506399999999996e+02, 1.6930699999999999e+03, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.5685400000000001e+02, 8.1488199999999995e+02, 1.6937900000000000e+03, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.6494700000000000e+02, 8.3626400000000001e+02, 1.7502400000000000e+03, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 2.2873400000000001e+02, 3.2684300000000002e+02, 1.6517100000000000e+03, 1.6716900000000001e+03], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 2.2357100000000000e+03, 1.1166900000000001e+03, 0.0, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.5504500000000000e+03, 7.0452499999999998e+02, 0.0, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 2.6879500000000002e+02, 1.1414100000000001e+03, 2.5073699999999999e+03, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.8336300000000001e+03, 8.4718100000000004e+02, 0.0, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 0.0, 0.0, 0.0, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 0.0, 0.0, 0.0, 0.0]];
												var n0i_205581 = [[3.3035699694317998e+01, -1.5999691510000001e+04, 3.0008800000000000e+00, 7.6315000000000000e-01, 4.5999999999999999e-03, 8.7443200000000001e+00, -4.4692100000000003e+00], [2.0764973574317995e+01, -2.8017290720000001e+03, 2.5003099999999998e+00, 1.3732000000000000e-01, -1.4660000000000001e-01, 9.0066000000000002e-01, 0.0], [2.3855712684317993e+01, -4.9021715160000003e+03, 2.5000200000000001e+00, 2.0445199999999999e+00, -1.0604400000000000e+00, 2.0336599999999998e+00, 1.3930000000000000e-02], [3.9927325104317994e+01, -2.3639653010000002e+04, 3.0026299999999999e+00, 4.3393899999999999e+00, 1.2372200000000000e+00, 1.3197400000000000e+01, -6.0198900000000002e+00], [4.7906361914317991e+01, -3.1236635510000000e+04, 3.0293899999999998e+00, 6.6056900000000001e+00, 3.1970000000000001e+00, 1.9192100000000000e+01, -8.3726699999999994e+00], [3.7499069214317991e+01, -3.8525502760000003e+04, 3.0671400000000002e+00, 8.9757499999999997e+00, 5.2515599999999996e+00, 2.5142299999999999e+01, 1.6138800000000000e+01], [3.9729643554317995e+01, -3.8957809329999996e+04, 3.3394400000000002e+00, 9.4489300000000007e+00, 6.8940599999999996e+00, 2.4461800000000000e+01, 1.4782400000000001e+01], [4.6369451984317990e+01, -5.1198309459999997e+04, 3.0000000000000000e+00, 1.1761799999999999e+01, 2.0110099999999999e+01, 3.3168799999999997e+01, 0.0], [4.5875636614317990e+01, -4.5215830000000002e+04, 3.0000000000000000e+00, 8.9504300000000008e+00, 2.1835999999999999e+01, 3.3403199999999998e+01, 0.0], [5.0194437604317997e+01, -5.2746833180000001e+04, 3.0000000000000000e+00, 1.1697699999999999e+01, 2.6814200000000000e+01, 3.8616399999999999e+01, 0.0], [5.5273582034317997e+01, -5.7104810559999998e+04, 3.0000000000000000e+00, 1.3726599999999999e+01, 3.0470700000000001e+01, 4.3556100000000001e+01, 0.0], [6.0455575064317991e+01, -6.0546763850000003e+04, 3.0000000000000000e+00, 1.5686500000000001e+01, 3.3802900000000001e+01, 4.8173099999999998e+01, 0.0], [6.5293734734317994e+01, -6.6600128370000006e+04, 3.0000000000000000e+00, 1.8024100000000001e+01, 3.8123500000000000e+01, 5.3341500000000003e+01, 0.0], [6.9136357264318008e+01, -7.4131454830000002e+04, 3.0000000000000000e+00, 2.1006900000000002e+01, 4.3493099999999998e+01, 5.8365699999999997e+01, 0.0], [1.6272468604317996e+01, -5.8369436960000003e+03, 1.4790600000000000e+00, 9.5806000000000002e-01, 4.5444000000000001e-01, 1.5603899999999999e+00, -1.3755999999999999e+00], [1.9998983024317994e+01, -2.3183226900000000e+03, 2.5014599999999998e+00, 1.0755800000000000e+00, 1.0133399999999999e+00, 0.0, 0.0], [2.0655134714317995e+01, -2.6352441159999998e+03, 2.5005500000000001e+00, 1.0286500000000001e+00, 4.9300000000000004e-03, 0.0, 0.0], [2.4776092774317995e+01, -7.7667330780000002e+03, 3.0039199999999999e+00, 1.0590000000000000e-02, 9.8763000000000001e-01, 3.0690400000000002e+00, 0.0], [2.4780360124317994e+01, -6.0690358690000003e+03, 3.0000000000000000e+00, 3.1194199999999999e+00, 1.0024299999999999e+00, 0.0, 0.0], [1.3243660794317995e+01, -7.4537500000000000e+02, 1.5000000000000000e+00, 0.0, 0.0, 0.0, 0.0], [1.3243660794317995e+01, -7.4537500000000000e+02, 1.5000000000000000e+00, 0.0, 0.0, 0.0, 0.0]];
process.exitCode = 0;
var global_raise_hook_18618 = [null];
var local_raise_hook_18623 = [null];
var out_of_mem_hook_18626 = [null];
var object_id_58237 = [0];
var ki25_205411 = [new Float64Array(21)];
var ei25_205416 = [new Float64Array(21)];
var kij5_205426 = [[new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21)]];
var uij5_205436 = [[new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21)]];
var gij5_205446 = [[new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21)]];
var bsnij_205447 = [0.0];
var bsnij2_205470 = [[[new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)]]];
var bs_205476 = [new Float64Array(18)];
var csn_205481 = [new Float64Array(58)];
L1: do {
	var i_205491 = [0];
	var res_205751 = 1;
	L2: do {
			L3: while (true) {
			if (!(res_205751 <= 21)) break L3;
				i_205491[0] = res_205751;
				ki25_205411[0][(i_205491[0])-1] = Math.pow(ki_205371[(i_205491[0])-1], 2.5000000000000000e+00);
				ei25_205416[0][(i_205491[0])-1] = Math.pow(ei_205144[(i_205491[0])-1], 2.5000000000000000e+00);
				res_205751 += 1;
			}
	} while(false);
} while(false);
L4: do {
	var i_205501 = [0];
	var res_205769 = 1;
	L5: do {
			L6: while (true) {
			if (!(res_205769 <= 21)) break L6;
				i_205501[0] = res_205769;
				L7: do {
					var j_205511 = [0];
					var res_205764 = 1;
					L8: do {
							L9: while (true) {
							if (!(res_205764 <= 21)) break L9;
								j_205511[0] = res_205764;
								L10: do {
									var k_205521 = [0];
									var res_205759 = 1;
									L11: do {
											L12: while (true) {
											if (!(res_205759 <= 18)) break L12;
												k_205521[0] = res_205759;
												bsnij_205447[0] = 1.0000000000000000e+00;
												if ((gn_205110[(k_205521[0])-1] == 1)) {
												bsnij_205447[0] = ((gij_205364[(i_205501[0])-1][(j_205511[0])-1] * (gi_205378[(i_205501[0])-1] + gi_205378[(j_205511[0])-1])) / 2.0000000000000000e+00);
												}
												
												if ((qn_205118[(k_205521[0])-1] == 1)) {
												bsnij_205447[0] = ((bsnij_205447[0] * qi_205385[(i_205501[0])-1]) * qi_205385[(j_205511[0])-1]);
												}
												
												if ((fn_205102[(k_205521[0])-1] == 1)) {
												bsnij_205447[0] = ((bsnij_205447[0] * fi_205392[(i_205501[0])-1]) * fi_205392[(j_205511[0])-1]);
												}
												
												if ((sn_205126[(k_205521[0])-1] == 1)) {
												bsnij_205447[0] = ((bsnij_205447[0] * si_205399[(i_205501[0])-1]) * si_205399[(j_205511[0])-1]);
												}
												
												if ((wn_205134[(k_205521[0])-1] == 1)) {
												bsnij_205447[0] = ((bsnij_205447[0] * wi_205406[(i_205501[0])-1]) * wi_205406[(j_205511[0])-1]);
												}
												
												bsnij2_205470[0][(i_205501[0])-1][(j_205511[0])-1][(k_205521[0])-1] = (((an_205068[(k_205521[0])-1] * Math.pow((eij_205202[(i_205501[0])-1][(j_205511[0])-1] * Math.sqrt((ei_205144[(i_205501[0])-1] * ei_205144[(j_205511[0])-1]))), un_205094[(k_205521[0])-1])) * Math.pow((ki_205371[(i_205501[0])-1] * ki_205371[(j_205511[0])-1]), 1.5000000000000000e+00)) * bsnij_205447[0]);
												res_205759 += 1;
											}
									} while(false);
								} while(false);
								kij5_205426[0][(i_205501[0])-1][(j_205511[0])-1] = (((Math.pow(kij_205310[(i_205501[0])-1][(j_205511[0])-1], 5.0000000000000000e+00) - 1.0000000000000000e+00) * ki25_205411[0][(i_205501[0])-1]) * ki25_205411[0][(j_205511[0])-1]);
								uij5_205436[0][(i_205501[0])-1][(j_205511[0])-1] = (((Math.pow(uij_205256[(i_205501[0])-1][(j_205511[0])-1], 5.0000000000000000e+00) - 1.0000000000000000e+00) * ei25_205416[0][(i_205501[0])-1]) * ei25_205416[0][(j_205511[0])-1]);
								gij5_205446[0][(i_205501[0])-1][(j_205511[0])-1] = (((gij_205364[(i_205501[0])-1][(j_205511[0])-1] - 1.0000000000000000e+00) * (gi_205378[(i_205501[0])-1] + gi_205378[(j_205511[0])-1])) / 2.0000000000000000e+00);
								res_205764 += 1;
							}
					} while(false);
				} while(false);
				res_205769 += 1;
			}
	} while(false);
} while(false);
var k3_205638 = [0.0];
var x_fields_205644 = [new Float64Array(21)];
var temp_old_206234 = [0.0];
var tun_206240 = [new Float64Array(58)];
var d_pd_dsave_206478 = [0.0];

function is_fat_pointer_24801(ti_24803) {
	var result_24804 = false;

	BeforeRet: do {
		result_24804 = !((ConstSet1[ti_24803.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_24804;

}

function nimCopyAux(dest_24832, src_24833, n_24835) {
		switch (n_24835.kind) {
		case 0:
			break;
		case 1:
			      dest_24832[n_24835.offset] = nimCopy(dest_24832[n_24835.offset], src_24833[n_24835.offset], n_24835.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_24835.sons.length; i++) {
      nimCopyAux(dest_24832, src_24833, n_24835.sons[i]);
    }
    
			break;
		case 3:
			      dest_24832[n_24835.offset] = nimCopy(dest_24832[n_24835.offset], src_24833[n_24835.offset], n_24835.typ);
      for (var i = 0; i < n_24835.sons.length; ++i) {
        nimCopyAux(dest_24832, src_24833, n_24835.sons[i][1]);
      }
    
			break;
		}

	
}

function abs_12649(x_12651) {
		var Tmp1;

	var result_12652 = 0.0;

		if ((x_12651 < 0.0)) {
		Tmp1 = -(x_12651);
		}
		else {
		Tmp1 = x_12651;
		}
		
		result_12652 = Tmp1;

	return result_12652;

}

function add_18638(x_18641, x_18641_Idx, y_18642) {
		      if (x_18641[x_18641_Idx] === null) { x_18641[x_18641_Idx] = []; }
      var off = x_18641[x_18641_Idx].length;
      x_18641[x_18641_Idx].length += y_18642.length;
      for (var i = 0; i < y_18642.length; ++i) {
        x_18641[x_18641_Idx][off+i] = y_18642.charCodeAt(i);
      }
    

	
}

function new_seq_23336(len_23339) {
	var result_23341 = null;

		result_23341 = new Array(len_23339); for (var i=0;i<len_23339;++i) {result_23341[i]=null;}
	return result_23341;

}

function unhandledException(e_21529) {
		var buf_21530 = [[]];
		if (!(((e_21529.message != null ? e_21529.message.length : 0) == 0))) {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(e_21529.message); } else { buf_21530[0] = e_21529.message.slice(); };
		}
		else {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit(" [")); } else { buf_21530[0] = makeNimstrLit(" ["); };
		add_18638(buf_21530, 0, e_21529.name);
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("]\x0A")); } else { buf_21530[0] = makeNimstrLit("]\x0A"); };
		var cbuf_21601 = toJSStr(buf_21530[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_21601);
  }
  else {
    throw cbuf_21601;
  }
  

	
}

function raiseIndexError(i_22655, a_22656, b_22657) {
		var Tmp1;

		var eHEX60gensym22802_23003 = null;
		eHEX60gensym22802_23003 = {m_type: NTI3658, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		if ((b_22657 < a_22656)) {
		Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
		}
		else {
		Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_22655)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_22656)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_22657)+"") || []);
		}
		
		eHEX60gensym22802_23003.message = nimCopy(null, Tmp1, NTI138);
		eHEX60gensym22802_23003.parent = null;
		raiseException(eHEX60gensym22802_23003, "IndexError");

	
}

function raiseOverflow() {
		var eHEX60gensym22058_22203 = null;
		eHEX60gensym22058_22203 = {m_type: NTI3646, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym22058_22203.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		eHEX60gensym22058_22203.parent = null;
		raiseException(eHEX60gensym22058_22203, "OverflowError");

	
}

function HEX2BHEX3D_164861(x_164865, x_164865_Idx, y_164866) {
		x_164865[x_164865_Idx] = (x_164865[x_164865_Idx] + y_164866);

	
}

function HEX2AHEX3D_164841(x_164845, x_164845_Idx, y_164846) {
		x_164845[x_164845_Idx] = (x_164845[x_164845_Idx] * y_164846);

	
}

function x_terms_detail_205774(comp_205776) {
	BeforeRet: do {
		var g_205777 = [0.0];
		var q_205778 = [0.0];
		var q2_205779 = 0.0;
		var f_205780 = [0.0];
		var u_205781 = [0.0];
		var xij_205782 = 0.0;
		var xi2_205783 = 0.0;
		var exit_205784 = true;
		L1: do {
			var i_205794 = 0;
			var res_208156 = 1;
			L2: do {
					L3: while (true) {
					if (!(res_208156 <= 21)) break L3;
						i_205794 = res_208156;
						if ((9.9999999999999995e-08 < abs_12649((comp_205776[chckIndx(i_205794, 1, (comp_205776 != null ? comp_205776.length : 0)+1-1)-1] - x_fields_205644[0][chckIndx(i_205794, 1, (x_fields_205644[0] != null ? x_fields_205644[0].length : 0)+1-1)-1])))) {
						exit_205784 = false;
						}
						
						x_fields_205644[0][chckIndx(i_205794, 1, (x_fields_205644[0] != null ? x_fields_205644[0].length : 0)+1-1)-1] = comp_205776[chckIndx(i_205794, 1, (comp_205776 != null ? comp_205776.length : 0)+1-1)-1];
						res_208156 = addInt(res_208156, 1);
					}
			} while(false);
		} while(false);
		if (exit_205784) {
		break BeforeRet;
		}
		
		k3_205638[0] = 0.0;
		L4: do {
			var i_205804 = 0;
			var res_208162 = 1;
			L5: do {
					L6: while (true) {
					if (!(res_208162 <= 18)) break L6;
						i_205804 = res_208162;
						bs_205476[0][chckIndx(i_205804, 1, (bs_205476[0] != null ? bs_205476[0].length : 0)+1-1)-1] = 0.0;
						res_208162 = addInt(res_208162, 1);
					}
			} while(false);
		} while(false);
		L7: do {
			var i_205869 = 0;
			var gas_a_205870 = 0.0;
			var i_208179 = 1;
			if ((i_208179 <= 21)) {
			L8: do {
					L9: while (true) {
					if (!true) break L9;
						i_205869 = i_208179;
						gas_a_205870 = comp_205776[chckIndx(i_208179, 1, (comp_205776 != null ? comp_205776.length : 0)+1-1)-1];
						L10: do {
							if ((gas_a_205870 == 0.0)) {
							break L10;
							}
							
							xi2_205783 = Math.pow(gas_a_205870, 2.0000000000000000e+00);
							HEX2BHEX3D_164861(k3_205638, 0, (gas_a_205870 * ki25_205411[0][chckIndx(i_205869, 1, (ki25_205411[0] != null ? ki25_205411[0].length : 0)+1-1)-1]));
							HEX2BHEX3D_164861(u_205781, 0, (gas_a_205870 * ei25_205416[0][chckIndx(i_205869, 1, (ei25_205416[0] != null ? ei25_205416[0].length : 0)+1-1)-1]));
							HEX2BHEX3D_164861(g_205777, 0, (gas_a_205870 * gi_205378[chckIndx(i_205869, 1, (gi_205378 != null ? gi_205378.length : 0)+1-1)-1]));
							HEX2BHEX3D_164861(q_205778, 0, (gas_a_205870 * qi_205385[chckIndx(i_205869, 1, (qi_205385 != null ? qi_205385.length : 0)+1-1)-1]));
							HEX2BHEX3D_164861(f_205780, 0, (xi2_205783 * fi_205392[chckIndx(i_205869, 1, (fi_205392 != null ? fi_205392.length : 0)+1-1)-1]));
							L11: do {
								var j_205915 = 0;
								var res_208170 = 1;
								L12: do {
										L13: while (true) {
										if (!(res_208170 <= 18)) break L13;
											j_205915 = res_208170;
											HEX2BHEX3D_164861(bs_205476[0], chckIndx(j_205915, 1, (bs_205476[0] != null ? bs_205476[0].length : 0)+1-1)-1, (xi2_205783 * bsnij2_205470[0][chckIndx(i_205869, 1, (bsnij2_205470[0] != null ? bsnij2_205470[0].length : 0)+1-1)-1][chckIndx(i_205869, 1, (bsnij2_205470[0][chckIndx(i_205869, 1, (bsnij2_205470[0] != null ? bsnij2_205470[0].length : 0)+1-1)-1] != null ? bsnij2_205470[0][chckIndx(i_205869, 1, (bsnij2_205470[0] != null ? bsnij2_205470[0].length : 0)+1-1)-1].length : 0)+1-1)-1][chckIndx(j_205915, 1, (bsnij2_205470[0][chckIndx(i_205869, 1, (bsnij2_205470[0] != null ? bsnij2_205470[0].length : 0)+1-1)-1][chckIndx(i_205869, 1, (bsnij2_205470[0][chckIndx(i_205869, 1, (bsnij2_205470[0] != null ? bsnij2_205470[0].length : 0)+1-1)-1] != null ? bsnij2_205470[0][chckIndx(i_205869, 1, (bsnij2_205470[0] != null ? bsnij2_205470[0].length : 0)+1-1)-1].length : 0)+1-1)-1] != null ? bsnij2_205470[0][chckIndx(i_205869, 1, (bsnij2_205470[0] != null ? bsnij2_205470[0].length : 0)+1-1)-1][chckIndx(i_205869, 1, (bsnij2_205470[0][chckIndx(i_205869, 1, (bsnij2_205470[0] != null ? bsnij2_205470[0].length : 0)+1-1)-1] != null ? bsnij2_205470[0][chckIndx(i_205869, 1, (bsnij2_205470[0] != null ? bsnij2_205470[0].length : 0)+1-1)-1].length : 0)+1-1)-1].length : 0)+1-1)-1]));
											res_208170 = addInt(res_208170, 1);
										}
								} while(false);
							} while(false);
						} while(false);
						if ((21 <= i_208179)) {
						break L8;
						}
						
						i_208179 = addInt(i_208179, 1);
					}
			} while(false);
			}
			
		} while(false);
		k3_205638[0] = Math.pow(k3_205638[0], 2.0000000000000000e+00);
		u_205781[0] = Math.pow(u_205781[0], 2.0000000000000000e+00);
		L14: do {
			var i_205933 = 0;
			var res_208197 = 1;
			L15: do {
					L16: while (true) {
					if (!(res_208197 <= 20)) break L16;
						i_205933 = res_208197;
						L17: do {
							if ((comp_205776[chckIndx(i_205933, 1, (comp_205776 != null ? comp_205776.length : 0)+1-1)-1] == 0.0)) {
							break L17;
							}
							
							L18: do {
								var j_205940 = 0;
								var colontmp__208191 = 0;
								colontmp__208191 = addInt(i_205933, 1);
								var res_208192 = colontmp__208191;
								L19: do {
										L20: while (true) {
										if (!(res_208192 <= 21)) break L20;
											j_205940 = res_208192;
											L21: do {
												if ((comp_205776[chckIndx(j_205940, 1, (comp_205776 != null ? comp_205776.length : 0)+1-1)-1] == 0.0)) {
												break L21;
												}
												
												xij_205782 = ((2.0000000000000000e+00 * comp_205776[chckIndx(i_205933, 1, (comp_205776 != null ? comp_205776.length : 0)+1-1)-1]) * comp_205776[chckIndx(j_205940, 1, (comp_205776 != null ? comp_205776.length : 0)+1-1)-1]);
												HEX2BHEX3D_164861(k3_205638, 0, (xij_205782 * kij5_205426[0][chckIndx(i_205933, 1, (kij5_205426[0] != null ? kij5_205426[0].length : 0)+1-1)-1][chckIndx(j_205940, 1, (kij5_205426[0][chckIndx(i_205933, 1, (kij5_205426[0] != null ? kij5_205426[0].length : 0)+1-1)-1] != null ? kij5_205426[0][chckIndx(i_205933, 1, (kij5_205426[0] != null ? kij5_205426[0].length : 0)+1-1)-1].length : 0)+1-1)-1]));
												HEX2BHEX3D_164861(u_205781, 0, (xij_205782 * uij5_205436[0][chckIndx(i_205933, 1, (uij5_205436[0] != null ? uij5_205436[0].length : 0)+1-1)-1][chckIndx(j_205940, 1, (uij5_205436[0][chckIndx(i_205933, 1, (uij5_205436[0] != null ? uij5_205436[0].length : 0)+1-1)-1] != null ? uij5_205436[0][chckIndx(i_205933, 1, (uij5_205436[0] != null ? uij5_205436[0].length : 0)+1-1)-1].length : 0)+1-1)-1]));
												HEX2BHEX3D_164861(g_205777, 0, (xij_205782 * gij5_205446[0][chckIndx(i_205933, 1, (gij5_205446[0] != null ? gij5_205446[0].length : 0)+1-1)-1][chckIndx(j_205940, 1, (gij5_205446[0][chckIndx(i_205933, 1, (gij5_205446[0] != null ? gij5_205446[0].length : 0)+1-1)-1] != null ? gij5_205446[0][chckIndx(i_205933, 1, (gij5_205446[0] != null ? gij5_205446[0].length : 0)+1-1)-1].length : 0)+1-1)-1]));
												L22: do {
													var k_205972 = 0;
													var res_208186 = 1;
													L23: do {
															L24: while (true) {
															if (!(res_208186 <= 18)) break L24;
																k_205972 = res_208186;
																HEX2BHEX3D_164861(bs_205476[0], chckIndx(k_205972, 1, (bs_205476[0] != null ? bs_205476[0].length : 0)+1-1)-1, (xij_205782 * bsnij2_205470[0][chckIndx(i_205933, 1, (bsnij2_205470[0] != null ? bsnij2_205470[0].length : 0)+1-1)-1][chckIndx(j_205940, 1, (bsnij2_205470[0][chckIndx(i_205933, 1, (bsnij2_205470[0] != null ? bsnij2_205470[0].length : 0)+1-1)-1] != null ? bsnij2_205470[0][chckIndx(i_205933, 1, (bsnij2_205470[0] != null ? bsnij2_205470[0].length : 0)+1-1)-1].length : 0)+1-1)-1][chckIndx(k_205972, 1, (bsnij2_205470[0][chckIndx(i_205933, 1, (bsnij2_205470[0] != null ? bsnij2_205470[0].length : 0)+1-1)-1][chckIndx(j_205940, 1, (bsnij2_205470[0][chckIndx(i_205933, 1, (bsnij2_205470[0] != null ? bsnij2_205470[0].length : 0)+1-1)-1] != null ? bsnij2_205470[0][chckIndx(i_205933, 1, (bsnij2_205470[0] != null ? bsnij2_205470[0].length : 0)+1-1)-1].length : 0)+1-1)-1] != null ? bsnij2_205470[0][chckIndx(i_205933, 1, (bsnij2_205470[0] != null ? bsnij2_205470[0].length : 0)+1-1)-1][chckIndx(j_205940, 1, (bsnij2_205470[0][chckIndx(i_205933, 1, (bsnij2_205470[0] != null ? bsnij2_205470[0].length : 0)+1-1)-1] != null ? bsnij2_205470[0][chckIndx(i_205933, 1, (bsnij2_205470[0] != null ? bsnij2_205470[0].length : 0)+1-1)-1].length : 0)+1-1)-1].length : 0)+1-1)-1]));
																res_208186 = addInt(res_208186, 1);
															}
													} while(false);
												} while(false);
											} while(false);
											res_208192 = addInt(res_208192, 1);
										}
								} while(false);
							} while(false);
						} while(false);
						res_208197 = addInt(res_208197, 1);
					}
			} while(false);
		} while(false);
		k3_205638[0] = Math.pow(k3_205638[0], 5.9999999999999998e-01);
		u_205781[0] = Math.pow(u_205781[0], 2.0000000000000001e-01);
		q2_205779 = Math.pow(q_205778[0], 2.0000000000000000e+00);
		L25: do {
			var n_205989 = 0;
			var res_208203 = 13;
			L26: do {
					L27: while (true) {
					if (!(res_208203 <= 58)) break L27;
						n_205989 = res_208203;
						csn_205481[0][chckIndx(n_205989, 1, (csn_205481[0] != null ? csn_205481[0].length : 0)+1-1)-1] = (an_205068[chckIndx(n_205989, 1, (an_205068 != null ? an_205068.length : 0)+1-1)-1] * Math.pow(u_205781[0], un_205094[chckIndx(n_205989, 1, (un_205094 != null ? un_205094.length : 0)+1-1)-1]));
						if ((gn_205110[chckIndx(n_205989, 1, (gn_205110 != null ? gn_205110.length : 0)+1-1)-1] == 1)) {
						HEX2AHEX3D_164841(csn_205481[0], chckIndx(n_205989, 1, (csn_205481[0] != null ? csn_205481[0].length : 0)+1-1)-1, g_205777[0]);
						}
						
						if ((qn_205118[chckIndx(n_205989, 1, (qn_205118 != null ? qn_205118.length : 0)+1-1)-1] == 1)) {
						HEX2AHEX3D_164841(csn_205481[0], chckIndx(n_205989, 1, (csn_205481[0] != null ? csn_205481[0].length : 0)+1-1)-1, q2_205779);
						}
						
						if ((fn_205102[chckIndx(n_205989, 1, (fn_205102 != null ? fn_205102.length : 0)+1-1)-1] == 1)) {
						HEX2AHEX3D_164841(csn_205481[0], chckIndx(n_205989, 1, (csn_205481[0] != null ? csn_205481[0].length : 0)+1-1)-1, f_205780[0]);
						}
						
						res_208203 = addInt(res_208203, 1);
					}
			} while(false);
		} while(false);
	} while (false);

	
}

function HEX2DHEX3D_206394(x_206398, x_206398_Idx, y_206399) {
		x_206398[x_206398_Idx] = (x_206398[x_206398_Idx] - y_206399);

	
}

function alpha_rdetail_206254(itau_206256, idel_206257, temp_206258, density_206259) {
	var result_206260 = {Field0: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, Field1: {Field0: 0.0, Field1: 0.0}, Field2: {Field0: 0.0}};

		var ckd_206261 = 0.0;
		var bkd_206262 = 0.0;
		var dred_206263 = 0.0;
		var sum_206264 = [0.0];
		var s0_206265 = 0.0;
		var s1_206266 = 0.0;
		var s2_206267 = 0.0;
		var s3_206268 = 0.0;
		var rt_206269 = 0.0;
		var k_float_206270 = 0.0;
		var sum0_206276 = new Float64Array(58);
		var sum_b_206277 = new Float64Array(58);
		var coef_d1_206278 = new Float64Array(58);
		var coef_d2_206279 = new Float64Array(58);
		var coef_d3_206280 = new Float64Array(58);
		var coef_t1_206281 = new Float64Array(58);
		var coef_t2_206282 = new Float64Array(58);
		var dknn_206286 = new Float64Array(10);
		var expn_206290 = new Float64Array(5);
		if ((9.9999999999999995e-08 < abs_12649((temp_206258 - temp_old_206234[0])))) {
		L1: do {
			var n_206300 = 0;
			var res_208219 = 1;
			L2: do {
					L3: while (true) {
					if (!(res_208219 <= 58)) break L3;
						n_206300 = res_208219;
						tun_206240[0][chckIndx(n_206300, 1, (tun_206240[0] != null ? tun_206240[0].length : 0)+1-1)-1] = Math.pow(temp_206258, -(un_205094[chckIndx(n_206300, 1, (un_205094 != null ? un_205094.length : 0)+1-1)-1]));
						res_208219 = addInt(res_208219, 1);
					}
			} while(false);
		} while(false);
		}
		
		temp_old_206234[0] = temp_206258;
		dred_206263 = (k3_205638[0] * density_206259);
		dknn_206286[chckIndx(0, 0, (dknn_206286 != null ? dknn_206286.length : 0)+0-1)-0] = 1.0000000000000000e+00;
		L4: do {
			var n_206316 = 0;
			var res_208225 = 1;
			L5: do {
					L6: while (true) {
					if (!(res_208225 <= 9)) break L6;
						n_206316 = res_208225;
						dknn_206286[chckIndx(n_206316, 0, (dknn_206286 != null ? dknn_206286.length : 0)+0-1)-0] = (dred_206263 * dknn_206286[chckIndx(subInt(n_206316, 1), 0, (dknn_206286 != null ? dknn_206286.length : 0)+0-1)-0]);
						res_208225 = addInt(res_208225, 1);
					}
			} while(false);
		} while(false);
		expn_206290[chckIndx(0, 0, (expn_206290 != null ? expn_206290.length : 0)+0-1)-0] = 1.0000000000000000e+00;
		L7: do {
			var n_206332 = 0;
			var res_208231 = 1;
			L8: do {
					L9: while (true) {
					if (!(res_208231 <= 4)) break L9;
						n_206332 = res_208231;
						expn_206290[chckIndx(n_206332, 0, (expn_206290 != null ? expn_206290.length : 0)+0-1)-0] = Math.exp(-(dknn_206286[chckIndx(n_206332, 0, (dknn_206286 != null ? dknn_206286.length : 0)+0-1)-0]));
						res_208231 = addInt(res_208231, 1);
					}
			} while(false);
		} while(false);
		rt_206269 = (8.3145100000000003e+00 * temp_206258);
		L10: do {
			var n_206342 = 0;
			var res_208239 = 1;
			L11: do {
					L12: while (true) {
					if (!(res_208239 <= 58)) break L12;
						n_206342 = res_208239;
						coef_t1_206281[chckIndx(n_206342, 1, (coef_t1_206281 != null ? coef_t1_206281.length : 0)+1-1)-1] = (8.3145100000000003e+00 * (un_205094[chckIndx(n_206342, 1, (un_205094 != null ? un_205094.length : 0)+1-1)-1] - 1.0000000000000000e+00));
						coef_t2_206282[chckIndx(n_206342, 1, (coef_t2_206282 != null ? coef_t2_206282.length : 0)+1-1)-1] = (coef_t1_206281[chckIndx(n_206342, 1, (coef_t1_206281 != null ? coef_t1_206281.length : 0)+1-1)-1] * un_205094[chckIndx(n_206342, 1, (un_205094 != null ? un_205094.length : 0)+1-1)-1]);
						if ((n_206342 <= 18)) {
						sum_206264[0] = (bs_205476[0][chckIndx(n_206342, 1, (bs_205476[0] != null ? bs_205476[0].length : 0)+1-1)-1] * density_206259);
						if ((13 <= n_206342)) {
						HEX2BHEX3D_164861(sum_206264, 0, (-(csn_205481[0][chckIndx(n_206342, 1, (csn_205481[0] != null ? csn_205481[0].length : 0)+1-1)-1]) * dred_206263));
						}
						
						sum_b_206277[chckIndx(n_206342, 1, (sum_b_206277 != null ? sum_b_206277.length : 0)+1-1)-1] = (sum_206264[0] * tun_206240[0][chckIndx(n_206342, 1, (tun_206240[0] != null ? tun_206240[0].length : 0)+1-1)-1]);
						}
						
						if ((13 <= n_206342)) {
						k_float_206270 = kn_205087[chckIndx(n_206342, 1, (kn_205087 != null ? kn_205087.length : 0)+1-1)-1];
						sum0_206276[chckIndx(n_206342, 1, (sum0_206276 != null ? sum0_206276.length : 0)+1-1)-1] = (((csn_205481[0][chckIndx(n_206342, 1, (csn_205481[0] != null ? csn_205481[0].length : 0)+1-1)-1] * dknn_206286[chckIndx(bn_205079[chckIndx(n_206342, 1, (bn_205079 != null ? bn_205079.length : 0)+1-1)-1], 0, (dknn_206286 != null ? dknn_206286.length : 0)+0-1)-0]) * tun_206240[0][chckIndx(n_206342, 1, (tun_206240[0] != null ? tun_206240[0].length : 0)+1-1)-1]) * expn_206290[chckIndx(kn_205087[chckIndx(n_206342, 1, (kn_205087 != null ? kn_205087.length : 0)+1-1)-1], 0, (expn_206290 != null ? expn_206290.length : 0)+0-1)-0]);
						bkd_206262 = (bn_205079[chckIndx(n_206342, 1, (bn_205079 != null ? bn_205079.length : 0)+1-1)-1] - (k_float_206270 * dknn_206286[chckIndx(kn_205087[chckIndx(n_206342, 1, (kn_205087 != null ? kn_205087.length : 0)+1-1)-1], 0, (dknn_206286 != null ? dknn_206286.length : 0)+0-1)-0]));
						ckd_206261 = ((k_float_206270 * k_float_206270) * dknn_206286[chckIndx(kn_205087[chckIndx(n_206342, 1, (kn_205087 != null ? kn_205087.length : 0)+1-1)-1], 0, (dknn_206286 != null ? dknn_206286.length : 0)+0-1)-0]);
						coef_d1_206278[chckIndx(n_206342, 1, (coef_d1_206278 != null ? coef_d1_206278.length : 0)+1-1)-1] = bkd_206262;
						coef_d2_206279[chckIndx(n_206342, 1, (coef_d2_206279 != null ? coef_d2_206279.length : 0)+1-1)-1] = ((bkd_206262 * (bkd_206262 - 1.0000000000000000e+00)) - ckd_206261);
						coef_d3_206280[chckIndx(n_206342, 1, (coef_d3_206280 != null ? coef_d3_206280.length : 0)+1-1)-1] = (((bkd_206262 - 2.0000000000000000e+00) * coef_d2_206279[chckIndx(n_206342, 1, (coef_d2_206279 != null ? coef_d2_206279.length : 0)+1-1)-1]) + (ckd_206261 * ((1.0000000000000000e+00 - k_float_206270) - (2.0000000000000000e+00 * bkd_206262))));
						}
						
						res_208239 = addInt(res_208239, 1);
					}
			} while(false);
		} while(false);
		L13: do {
			var n_206363 = 0;
			var res_208245 = 1;
			L14: do {
					L15: while (true) {
					if (!(res_208245 <= 58)) break L15;
						n_206363 = res_208245;
						s0_206265 = (sum0_206276[chckIndx(n_206363, 1, (sum0_206276 != null ? sum0_206276.length : 0)+1-1)-1] + sum_b_206277[chckIndx(n_206363, 1, (sum_b_206277 != null ? sum_b_206277.length : 0)+1-1)-1]);
						s1_206266 = ((sum0_206276[chckIndx(n_206363, 1, (sum0_206276 != null ? sum0_206276.length : 0)+1-1)-1] * coef_d1_206278[chckIndx(n_206363, 1, (coef_d1_206278 != null ? coef_d1_206278.length : 0)+1-1)-1]) + sum_b_206277[chckIndx(n_206363, 1, (sum_b_206277 != null ? sum_b_206277.length : 0)+1-1)-1]);
						s2_206267 = (sum0_206276[chckIndx(n_206363, 1, (sum0_206276 != null ? sum0_206276.length : 0)+1-1)-1] * coef_d2_206279[chckIndx(n_206363, 1, (coef_d2_206279 != null ? coef_d2_206279.length : 0)+1-1)-1]);
						s3_206268 = (sum0_206276[chckIndx(n_206363, 1, (sum0_206276 != null ? sum0_206276.length : 0)+1-1)-1] * coef_d3_206280[chckIndx(n_206363, 1, (coef_d3_206280 != null ? coef_d3_206280.length : 0)+1-1)-1]);
						HEX2BHEX3D_164861(result_206260["Field0"], "Field0", (rt_206269 * s0_206265));
						HEX2BHEX3D_164861(result_206260["Field0"], "Field1", (rt_206269 * s1_206266));
						HEX2BHEX3D_164861(result_206260["Field0"], "Field2", (rt_206269 * s2_206267));
						HEX2BHEX3D_164861(result_206260["Field0"], "Field3", (rt_206269 * s3_206268));
						if ((0 < itau_206256)) {
						HEX2DHEX3D_206394(result_206260["Field1"], "Field0", (coef_t1_206281[chckIndx(n_206363, 1, (coef_t1_206281 != null ? coef_t1_206281.length : 0)+1-1)-1] * s0_206265));
						HEX2DHEX3D_206394(result_206260["Field1"], "Field1", (coef_t1_206281[chckIndx(n_206363, 1, (coef_t1_206281 != null ? coef_t1_206281.length : 0)+1-1)-1] * s1_206266));
						HEX2BHEX3D_164861(result_206260["Field2"], "Field0", (coef_t2_206282[chckIndx(n_206363, 1, (coef_t2_206282 != null ? coef_t2_206282.length : 0)+1-1)-1] * s0_206265));
						}
						
						res_208245 = addInt(res_208245, 1);
					}
			} while(false);
		} while(false);

	return result_206260;

}

function pressure_detail_206521(temp_206523, density_206524, comp_206525) {
	var result_206526 = {Field0: 0.0, Field1: 0.0};

		var alpha_r_206527 = {Field0: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, Field1: {Field0: 0.0, Field1: 0.0}, Field2: {Field0: 0.0}};
		x_terms_detail_205774(comp_206525);
		nimCopy(alpha_r_206527, alpha_rdetail_206254(0, 2, temp_206523, density_206524), NTI206048);
		result_206526.Field1 = (1.0000000000000000e+00 + ((alpha_r_206527.Field0.Field1 / 8.3145100000000003e+00) / temp_206523));
		result_206526.Field0 = (((density_206524 * 8.3145100000000003e+00) * temp_206523) * result_206526.Field1);
		d_pd_dsave_206478[0] = (((8.3145100000000003e+00 * temp_206523) + (2.0000000000000000e+00 * alpha_r_206527.Field0.Field1)) + alpha_r_206527.Field0.Field2);

	return result_206526;

}

function density_detail_206567(temp_206569, pressure_206570, comp_206571, density_206573) {
							var Tmp4;

	var result_206574 = {Field0: 0.0, Field1: 0, Field2: null};

	BeforeRet: do {
		var plog_206575 = 0.0;
		var vlog_206576 = [0.0];
		var dpdlv_206577 = 0.0;
		var vdiff_206578 = 0.0;
		var tolr_206579 = 0.0;
		var p_detail_206580 = {Field0: 0.0, Field1: 0.0};
		result_206574.Field1 = 0;
		result_206574.Field2 = nimCopy(null, [], NTI138);
		if ((abs_12649(pressure_206570) < 1.0000000000000001e-15)) {
		result_206574.Field0 = 0.0;
		break BeforeRet;
		}
		
		tolr_206579 = 9.9999999999999995e-08;
		if ((-1.0000000000000001e-15 < density_206573)) {
		result_206574.Field0 = ((pressure_206570 / 8.3145100000000003e+00) / temp_206569);
		}
		else {
			result_206574.Field0 = abs_12649(density_206573);
		}
		
		plog_206575 = Math.log(pressure_206570);
		vlog_206576[0] = -(Math.log(result_206574.Field0));
		L1: do {
			var it_206590 = 0;
			var res_208150 = 1;
			L2: do {
					L3: while (true) {
					if (!(res_208150 <= 20)) break L3;
						it_206590 = res_208150;
							if ((vlog_206576[0] < -7.0000000000000000e+00)) Tmp4 = true; else {								Tmp4 = (1.0000000000000000e+02 < vlog_206576[0]);							}						if (Tmp4) {
						result_206574.Field1 = 1;
						result_206574.Field2 = nimCopy(null, makeNimstrLit("Calculation failed to converge in DETAIL method, ideal gas density returned."), NTI138);
						result_206574.Field0 = ((pressure_206570 / 8.3145100000000003e+00) / temp_206569);
						break BeforeRet;
						}
						
						result_206574.Field0 = Math.exp(-(vlog_206576[0]));
						nimCopy(p_detail_206580, pressure_detail_206521(temp_206569, result_206574.Field0, comp_206571), NTI206472);
						if (((d_pd_dsave_206478[0] < 1.0000000000000001e-15) || (p_detail_206580.Field0 < 1.0000000000000001e-15))) {
						HEX2BHEX3D_164861(vlog_206576, 0, 1.0000000000000001e-01);
						}
						else {
							dpdlv_206577 = (-(result_206574.Field0) * d_pd_dsave_206478[0]);
							vdiff_206578 = (((Math.log(p_detail_206580.Field0) - plog_206575) * p_detail_206580.Field0) / dpdlv_206577);
							vlog_206576[0] = (vlog_206576[0] - vdiff_206578);
							if ((abs_12649(vdiff_206578) < tolr_206579)) {
							result_206574.Field0 = Math.exp(-(vlog_206576[0]));
							break BeforeRet;
							}
							
						}
						
						res_208150 = addInt(res_208150, 1);
					}
			} while(false);
		} while(false);
		result_206574.Field1 = 1;
		result_206574.Field2 = nimCopy(null, makeNimstrLit("Calculation failed to converge in DETAIL method, ideal gas density returned."), NTI138);
		result_206574.Field0 = ((pressure_206570 / 8.3145100000000003e+00) / temp_206569);
	} while (false);

	return result_206574;

}

function molar_mass_detail_206492(composition_206494) {
	var result_206495 = 0.0;

		L1: do {
			var i_206506 = 0;
			var percent_composition_206507 = 0.0;
			var i_208251 = 1;
			if ((i_208251 <= 21)) {
			L2: do {
					L3: while (true) {
					if (!true) break L3;
						i_206506 = i_208251;
						percent_composition_206507 = composition_206494[chckIndx(i_208251, 1, (composition_206494 != null ? composition_206494.length : 0)+1-1)-1];
						result_206495 = (result_206495 + (percent_composition_206507 * molar_masses_205029[chckIndx(i_206506, 1, (molar_masses_205029 != null ? molar_masses_205029.length : 0)+1-1)-1]));
						if ((21 <= i_208251)) {
						break L2;
						}
						
						i_208251 = addInt(i_208251, 1);
					}
			} while(false);
			}
			
		} while(false);

	return result_206495;

}

function alpha0detail_206094(temp_206096, density_206097, comp_206098) {
	var result_206099 = [{Field0: 0.0, Field1: 0.0, Field2: 0.0}];

		var log_t_206100 = 0.0;
		var log_d_206101 = 0.0;
		var log_hyp_206102 = 0.0;
		var th0t_206103 = 0.0;
		var logx_d_206104 = 0.0;
		var sum_hyp0_206105 = [0.0];
		var sum_hyp1_206106 = [0.0];
		var sum_hyp2_206107 = [0.0];
		var em_206108 = 0.0;
		var ep_206109 = 0.0;
		var hcn_206110 = 0.0;
		var hsn_206111 = 0.0;
		var th0_206112 = 0.0;
		var n0_206113 = 0.0;
		if ((1.0000000000000001e-15 < density_206097)) {
		log_d_206101 = Math.log(density_206097);
		}
		else {
			log_d_206101 = Math.log(1.0000000000000001e-15);
		}
		
		log_t_206100 = Math.log(temp_206096);
		L1: do {
			var i_206124 = 0;
			var gas_percentage_206125 = 0.0;
			var i_208262 = 1;
			if ((i_208262 <= 21)) {
			L2: do {
					L3: while (true) {
					if (!true) break L3;
						i_206124 = i_208262;
						gas_percentage_206125 = comp_206098[chckIndx(i_208262, 1, (comp_206098 != null ? comp_206098.length : 0)+1-1)-1];
						L4: do {
							if ((gas_percentage_206125 == 0.0)) {
							break L4;
							}
							
							logx_d_206104 = (log_d_206101 + Math.log(gas_percentage_206125));
							sum_hyp0_206105[0] = 0.0;
							sum_hyp1_206106[0] = 0.0;
							sum_hyp2_206107[0] = 0.0;
							L5: do {
								var j_206135 = 0;
								var res_208257 = 4;
								L6: do {
										L7: while (true) {
										if (!(res_208257 <= 7)) break L7;
											j_206135 = res_208257;
											L8: do {
												th0_206112 = th0i_205636[chckIndx(i_206124, 1, (th0i_205636 != null ? th0i_205636.length : 0)+1-1)-1][chckIndx(j_206135, 1, (th0i_205636[chckIndx(i_206124, 1, (th0i_205636 != null ? th0i_205636.length : 0)+1-1)-1] != null ? th0i_205636[chckIndx(i_206124, 1, (th0i_205636 != null ? th0i_205636.length : 0)+1-1)-1].length : 0)+1-1)-1];
												n0_206113 = n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1][chckIndx(j_206135, 1, (n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1] != null ? n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1].length : 0)+1-1)-1];
												if ((th0_206112 == 0.0)) {
												break L8;
												}
												
												th0t_206103 = (th0_206112 / temp_206096);
												ep_206109 = Math.exp(th0t_206103);
												em_206108 = (1.0000000000000000e+00 / ep_206109);
												hsn_206111 = ((ep_206109 - em_206108) / 2.0000000000000000e+00);
												hcn_206110 = ((ep_206109 + em_206108) / 2.0000000000000000e+00);
												if (((j_206135 == 4) || (j_206135 == 6))) {
												log_hyp_206102 = Math.log(abs_12649(hsn_206111));
												HEX2BHEX3D_164861(sum_hyp0_206105, 0, (n0_206113 * log_hyp_206102));
												HEX2BHEX3D_164861(sum_hyp1_206106, 0, (n0_206113 * (log_hyp_206102 - ((th0t_206103 * hcn_206110) / hsn_206111))));
												HEX2BHEX3D_164861(sum_hyp2_206107, 0, (n0_206113 * Math.pow((th0t_206103 / hsn_206111), 2.0000000000000000e+00)));
												}
												else {
													log_hyp_206102 = Math.log(abs_12649(hcn_206110));
													HEX2BHEX3D_164861(sum_hyp0_206105, 0, (-(n0_206113) * log_hyp_206102));
													HEX2BHEX3D_164861(sum_hyp1_206106, 0, (-(n0_206113) * (log_hyp_206102 - ((th0t_206103 * hsn_206111) / hcn_206110))));
													HEX2BHEX3D_164861(sum_hyp2_206107, 0, (n0_206113 * Math.pow((th0t_206103 / hcn_206110), 2.0000000000000000e+00)));
												}
												
											} while(false);
											res_208257 = addInt(res_208257, 1);
										}
								} while(false);
							} while(false);
							HEX2BHEX3D_164861(result_206099[0], "Field0", (gas_percentage_206125 * ((((logx_d_206104 + n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1][chckIndx(1, 1, (n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1] != null ? n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1].length : 0)+1-1)-1]) + (n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1][chckIndx(2, 1, (n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1] != null ? n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1].length : 0)+1-1)-1] / temp_206096)) - (n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1][chckIndx(3, 1, (n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1] != null ? n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1].length : 0)+1-1)-1] * log_t_206100)) + sum_hyp0_206105[0])));
							HEX2BHEX3D_164861(result_206099[0], "Field1", (gas_percentage_206125 * (((logx_d_206104 + n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1][chckIndx(1, 1, (n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1] != null ? n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1].length : 0)+1-1)-1]) - (n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1][chckIndx(3, 1, (n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1] != null ? n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1].length : 0)+1-1)-1] * (1.0000000000000000e+00 + log_t_206100))) + sum_hyp1_206106[0])));
							HEX2BHEX3D_164861(result_206099[0], "Field2", (-(gas_percentage_206125) * (n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1][chckIndx(3, 1, (n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1] != null ? n0i_205581[chckIndx(i_206124, 1, (n0i_205581 != null ? n0i_205581.length : 0)+1-1)-1].length : 0)+1-1)-1] + sum_hyp2_206107[0])));
						} while(false);
						if ((21 <= i_208262)) {
						break L2;
						}
						
						i_208262 = addInt(i_208262, 1);
					}
			} while(false);
			}
			
		} while(false);
		HEX2AHEX3D_164841(result_206099[0], "Field0", (8.3145100000000003e+00 * temp_206096));
		HEX2AHEX3D_164841(result_206099[0], "Field1", 8.3145100000000003e+00);
		HEX2AHEX3D_164841(result_206099[0], "Field2", 8.3145100000000003e+00);

	return result_206099[0];

}

function properties_detail_206683(temp_206685, density_206686, comp_206687) {
	var result_206688 = {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, Field4: 0.0, Field5: 0.0, Field6: 0.0, Field7: 0.0, Field8: 0.0, Field9: 0.0, Field10: 0.0, Field11: 0.0, Field12: 0.0};

		var alpha0_206689 = {Field0: 0.0, Field1: 0.0, Field2: 0.0};
		var alpha_r_206690 = {Field0: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, Field1: {Field0: 0.0, Field1: 0.0}, Field2: {Field0: 0.0}};
		var a_206691 = 0.0;
		var rt_206692 = 0.0;
		result_206688.Field0 = molar_mass_detail_206492(comp_206687);
		x_terms_detail_205774(comp_206687);
		nimCopy(alpha0_206689, alpha0detail_206094(temp_206685, density_206686, comp_206687), NTI206040);
		nimCopy(alpha_r_206690, alpha_rdetail_206254(2, 3, temp_206685, density_206686), NTI206048);
		rt_206692 = (8.3145100000000003e+00 * temp_206685);
		result_206688.Field2 = (1.0000000000000000e+00 + (alpha_r_206690.Field0.Field1 / rt_206692));
		result_206688.Field1 = ((density_206686 * rt_206692) * result_206688.Field2);
		result_206688.Field3.Field0 = ((rt_206692 + (2.0000000000000000e+00 * alpha_r_206690.Field0.Field1)) + alpha_r_206690.Field0.Field2);
		result_206688.Field3.Field3 = ((density_206686 * 8.3145100000000003e+00) + (density_206686 * alpha_r_206690.Field1.Field1));
		a_206691 = (alpha0_206689.Field0 + alpha_r_206690.Field0.Field0);
		result_206688.Field6 = (-(alpha0_206689.Field1) - alpha_r_206690.Field1.Field0);
		result_206688.Field4 = (a_206691 + (temp_206685 * result_206688.Field6));
		result_206688.Field7 = -((alpha0_206689.Field2 + alpha_r_206690.Field2.Field0));
		if ((1.0000000000000001e-15 < density_206686)) {
		result_206688.Field5 = (result_206688.Field4 + (result_206688.Field1 / density_206686));
		result_206688.Field10 = (a_206691 + (result_206688.Field1 / density_206686));
		result_206688.Field8 = (result_206688.Field7 + ((temp_206685 * Math.pow((result_206688.Field3.Field3 / density_206686), 2.0000000000000000e+00)) / result_206688.Field3.Field0));
		result_206688.Field3.Field1 = ((((2.0000000000000000e+00 * alpha_r_206690.Field0.Field1) + (4.0000000000000000e+00 * alpha_r_206690.Field0.Field2)) + alpha_r_206690.Field0.Field3) / density_206686);
		result_206688.Field11 = ((((((temp_206685 / density_206686) * result_206688.Field3.Field3) / result_206688.Field3.Field0) - 1.0000000000000000e+00) / result_206688.Field8) / density_206686);
		}
		else {
			result_206688.Field5 = (result_206688.Field4 + rt_206692);
			result_206688.Field10 = (a_206691 + rt_206692);
			result_206688.Field8 = (result_206688.Field7 + 8.3145100000000003e+00);
			result_206688.Field3.Field1 = 0.0;
			result_206688.Field11 = 1.0000000000000000e+20;
		}
		
		result_206688.Field9 = ((((1.0000000000000000e+03 * result_206688.Field8) / result_206688.Field7) * result_206688.Field3.Field0) / result_206688.Field0);
		if ((result_206688.Field9 < 0.0)) {
		result_206688.Field9 = 0.0;
		}
		
		result_206688.Field9 = Math.sqrt(result_206688.Field9);
		result_206688.Field12 = (((result_206688.Field9 * result_206688.Field9) * result_206688.Field0) / ((rt_206692 * 1.0000000000000000e+03) * result_206688.Field2));
		result_206688.Field3.Field2 = 0.0;

	return result_206688;

}

function thermal_expansion_207084(alpha_207086, diameter_207087, reference_temp_207088, flow_temp_207089) {
	var result_207090 = 0.0;

		result_207090 = (diameter_207087 * (1.0000000000000000e+00 + (alpha_207086 * (flow_temp_207089 - reference_temp_207088))));

	return result_207090;

}

function diameter_ratio_207105(orifice_plate_bore_diameter_207107, meter_internal_diameter_207108) {
	var result_207109 = 0.0;

		result_207109 = (orifice_plate_bore_diameter_207107 / meter_internal_diameter_207108);

	return result_207109;

}

function velocity_factor_207123(beta_207125) {
	var result_207126 = 0.0;

		result_207126 = (1.0000000000000000e+00 / Math.sqrt((1.0000000000000000e+00 - Math.pow(beta_207125, 4.0000000000000000e+00))));

	return result_207126;

}

function discharge_constants_207192(meter_internal_diameter_207194, beta_207195) {
	var result_207196 = {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0, Field4: 0.0};

		var location1_207197 = 0.0;
		var location2_207198 = 0.0;
		var dam_height_207199 = 0.0;
		var upstream_tap_correction_207200 = 0.0;
		var downstream_tap_correction_207201 = 0.0;
		var small_pipe_correction_207202 = 0.0;
		location1_207197 = (2.5399999999999999e-02 / meter_internal_diameter_207194);
		location2_207198 = (2.5399999999999999e-02 / meter_internal_diameter_207194);
		dam_height_207199 = ((2.0000000000000000e+00 * location2_207198) / (1.0000000000000000e+00 - beta_207195));
		upstream_tap_correction_207200 = ((((4.3299999999999998e-02 + (7.1199999999999999e-02 * Math.pow(2.7182800000000000e+00, (-8.5000000000000000e+00 * location1_207197)))) + (-1.1450000000000000e-01 * Math.pow(2.7182800000000000e+00, (-6.0000000000000000e+00 * location2_207198)))) * Math.pow(beta_207195, 4.0000000000000000e+00)) / (1.0000000000000000e+00 - Math.pow(beta_207195, 4.0000000000000000e+00)));
		downstream_tap_correction_207201 = ((-1.1599999999999999e-02 * (dam_height_207199 + (-5.2000000000000002e-01 * Math.pow(dam_height_207199, 1.3000000000000000e+00)))) * Math.pow(beta_207195, 1.1000000000000001e+00));
		if ((7.1119999999999989e-02 < meter_internal_diameter_207194)) {
		small_pipe_correction_207202 = 0.0;
		}
		else {
			small_pipe_correction_207202 = ((3.0000000000000001e-03 * (1.0000000000000000e+00 - beta_207195)) * (2.7999999999999998e+00 - (meter_internal_diameter_207194 / 2.5399999999999999e-02)));
		}
		
		result_207196.Field0 = (((((5.9609999999999996e-01 + (2.9100000000000001e-02 * Math.pow(beta_207195, 2.0000000000000000e+00))) + (-2.2900000000000001e-01 * Math.pow(beta_207195, 8.0000000000000000e+00))) + upstream_tap_correction_207200) + downstream_tap_correction_207201) + small_pipe_correction_207202);
		result_207196.Field1 = ((5.1099999999999995e-04 * Math.pow(beta_207195, 6.9999999999999996e-01)) * Math.pow(2.5000000000000000e+02, 6.9999999999999996e-01));
		result_207196.Field2 = ((2.1000000000000001e-02 * Math.pow(beta_207195, 4.0000000000000000e+00)) * Math.pow(2.5000000000000000e+02, 3.4999999999999998e-01));
		result_207196.Field3 = ((((4.8999999999999998e-03 * Math.pow(beta_207195, 4.0000000000000000e+00)) * Math.pow(beta_207195, 8.0000000000000004e-01)) * Math.pow(4.7500000000000000e+00, 8.0000000000000004e-01)) * Math.pow(2.5000000000000000e+02, 3.4999999999999998e-01));
		result_207196.Field4 = ((((-2.3000000000000001e-01 * upstream_tap_correction_207200) + (-1.4000000000000001e-01 * downstream_tap_correction_207201)) * Math.pow(beta_207195, 8.0000000000000004e-01)) * Math.pow(4.7500000000000000e+00, 8.0000000000000004e-01));

	return result_207196;

}

function mol_lto_kgm3_208023(molar_mass_208025, density_208026) {
	var result_208027 = 0.0;

		result_208027 = (density_208026 * molar_mass_208025);

	return result_208027;

}

function expansion_factor_207243(beta_207245, differential_pressure_207246, flow_pressure_207247, isentropic_exponent_207248) {
	var result_207249 = 0.0;

		var differential_to_flow_pressure_ratio_207250 = 0.0;
		var expansion_factor_pressure_const_207251 = 0.0;
		differential_to_flow_pressure_ratio_207250 = (differential_pressure_207246 / flow_pressure_207247);
		expansion_factor_pressure_const_207251 = ((4.0999999999999998e-01 + (3.4999999999999998e-01 * Math.pow(beta_207245, 4.0000000000000000e+00))) / isentropic_exponent_207248);
		result_207249 = (1.0000000000000000e+00 - (expansion_factor_pressure_const_207251 * differential_to_flow_pressure_ratio_207250));

	return result_207249;

}

function iteration_flow_factor_207268(orifice_plate_bore_diameter_207270, meter_internal_diameter_207271, differential_pressure_207272, velocity_factor_207273, viscocity_207274, density_207275, expansion_factor_207276) {
	var result_207277 = 0.0;

		var flow_ic_207278 = 0.0;
		var flow_ip_207279 = 0.0;
		flow_ic_207278 = (((4.0000000000000000e+03 * meter_internal_diameter_207271) * viscocity_207274) / ((velocity_factor_207273 * expansion_factor_207276) * Math.pow(orifice_plate_bore_diameter_207270, 2.0000000000000000e+00)));
		flow_ip_207279 = Math.sqrt(((2.0000000000000000e+00 * density_207275) * differential_pressure_207272));
		if ((flow_ic_207278 < (1.0000000000000000e+03 * flow_ip_207279))) {
		result_207277 = (flow_ic_207278 / flow_ip_207279);
		}
		else {
			result_207277 = 1.0000000000000000e+03;
		}
		

	return result_207277;

}

function discharge_coefficient_207324(discharge_coefs_207326, iteration_flow_factor_207327) {
	var result_207328 = {Field0: 0.0, Field1: false};

		var colontmp__208265 = {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0, Field4: 0.0};
		var d0_207329 = 0.0;
		var d1_207330 = 0.0;
		var d2_207331 = 0.0;
		var d3_207332 = 0.0;
		var d4_207333 = 0.0;
		nimCopy(colontmp__208265, discharge_coefs_207326, NTI207142);
		d0_207329 = colontmp__208265["Field0"];
		d1_207330 = colontmp__208265["Field1"];
		d2_207331 = colontmp__208265["Field2"];
		d3_207332 = colontmp__208265["Field3"];
		d4_207333 = colontmp__208265["Field4"];
		var coef_207334 = 1.0000000000000000e+00;
		var reynolds_207335 = 0.0;
		var r35_207336 = 0.0;
		var r70_207337 = 0.0;
		var rlbr_207338 = 0.0;
		var r80_207339 = 0.0;
		var f_c_207340 = 0.0;
		var d_c_207341 = 0.0;
		result_207328.Field0 = d0_207329;
		result_207328.Field1 = false;
		L1: do {
				L2: while (true) {
				if (!(5.0000000000000004e-06 <= abs_12649(coef_207334))) break L2;
					reynolds_207335 = (iteration_flow_factor_207327 / result_207328.Field0);
					r80_207339 = Math.pow(reynolds_207335, 8.0000000000000004e-01);
					if ((reynolds_207335 < 1.1421393372561650e+00)) {
					r35_207336 = Math.pow(reynolds_207335, 3.4999999999999998e-01);
					f_c_207340 = ((d0_207329 + ((((d1_207330 * r35_207336) + d2_207331) + (d3_207332 * r80_207339)) * r35_207336)) + (d4_207333 * r80_207339));
					d_c_207341 = ((((((6.9999999999999996e-01 * d1_207330) * r35_207336) + (3.4999999999999998e-01 * d2_207331)) + ((1.1499999999999999e+00 * d3_207332) * r80_207339)) * r35_207336) + ((8.0000000000000004e-01 * d4_207333) * r80_207339));
					}
					else {
						r70_207337 = Math.pow(reynolds_207335, 6.9999999999999996e-01);
						rlbr_207338 = (3.7643876933201650e+00 / reynolds_207335);
						f_c_207340 = (((d0_207329 + (d1_207330 * r70_207337)) + ((d2_207331 + (d3_207332 * r80_207339)) * (4.3435242615232674e+00 - rlbr_207338))) + (d4_207333 * r80_207339));
						d_c_207341 = (((((6.9999999999999996e-01 * d1_207330) * r70_207337) + ((d2_207331 + (d3_207332 * r80_207339)) * rlbr_207338)) + (((8.0000000000000004e-01 * d3_207332) * (4.3435242615232674e+00 - rlbr_207338)) * r80_207339)) + ((8.0000000000000004e-01 * d4_207333) * r80_207339));
					}
					
					coef_207334 = ((result_207328.Field0 - f_c_207340) / (1.0000000000000000e+00 + (d_c_207341 / result_207328.Field0)));
					result_207328.Field0 = (result_207328.Field0 - coef_207334);
				}
		} while(false);
		if ((1.0000000000000000e+00 < reynolds_207335)) {
		result_207328.Field1 = true;
		}
		

	return result_207328;

}

function mass_flow_207373(discharge_coef_207375, orifice_plate_bore_diameter_207376, differential_pressure_207377, velocity_factor_207378, density_207379, expansion_factor_207380) {
	var result_207381 = 0.0;

		var flow_mass_207382 = ((7.8539816339744828e-01 * velocity_factor_207378) * Math.pow(orifice_plate_bore_diameter_207376, 2.0000000000000000e+00));
		result_207381 = (((flow_mass_207382 * discharge_coef_207375) * expansion_factor_207380) * Math.sqrt(((2.0000000000000000e+00 * density_207379) * differential_pressure_207377)));

	return result_207381;

}

function actual_flow_207397(discharge_coef_207399, orifice_plate_bore_diameter_207400, differential_pressure_207401, velocity_factor_207402, density_207403, expansion_factor_207404) {
	var result_207405 = 0.0;

		result_207405 = (mass_flow_207373(discharge_coef_207399, orifice_plate_bore_diameter_207400, differential_pressure_207401, velocity_factor_207402, density_207403, expansion_factor_207404) / density_207403);

	return result_207405;

}

function base_flow_207419(discharge_coef_207421, orifice_plate_bore_diameter_207422, differential_pressure_207423, velocity_factor_207424, base_density_207425, density_207426, expansion_factor_207427) {
	var result_207428 = 0.0;

		result_207428 = (mass_flow_207373(discharge_coef_207421, orifice_plate_bore_diameter_207422, differential_pressure_207423, velocity_factor_207424, density_207426, expansion_factor_207427) / base_density_207425);

	return result_207428;

}

function orificeCalculator(flow_temp_208043, flow_pressure_208044, differential_pressure_208045, composition_208046, pipe_internal_diameter_208047, orifice_internal_diameter_208048, alpha_pipe_208049, alpha_orifice_208050, base_temp_208051, base_pressure_208052, diff_lo_208053) {
	var result_208054 = {Field0: 0.0, Field1: 0.0, Field2: 0.0};

	BeforeRet: do {
		if ((differential_pressure_208045 <= diff_lo_208053)) {
		var colontmp__208143 = 0.0;
		var colontmp__208144 = 0.0;
		var colontmp__208145 = 0.0;
		nimCopy(result_208054, {Field0: colontmp__208143, Field1: colontmp__208144, Field2: colontmp__208145}, NTI208015);
		break BeforeRet;
		}
		
		var f_t_208056 = (flow_temp_208043 + 2.7314999999999998e+02);
		var b_t_208057 = (base_temp_208051 + 2.7314999999999998e+02);
		var pipe_id_208059 = (pipe_internal_diameter_208047 / 1.0000000000000000e+03);
		var orifice_id_208061 = (orifice_internal_diameter_208048 / 1.0000000000000000e+03);
		var pipe_a_208062 = (alpha_pipe_208049 * Math.pow(1.0000000000000000e+01, -6.0000000000000000e+00));
		var orifice_a_208063 = (alpha_orifice_208050 * Math.pow(1.0000000000000000e+01, -6.0000000000000000e+00));
		var base_density_208065 = nimCopy(null, density_detail_206567(b_t_208057, (base_pressure_208052 / 1.0000000000000000e+03), composition_208046, -1.0000000000000000e+00), NTI206559);
		var base_properties_208066 = nimCopy(null, properties_detail_206683(b_t_208057, base_density_208065.Field0, composition_208046), NTI206646);
		var density_208068 = nimCopy(null, density_detail_206567(f_t_208056, (flow_pressure_208044 / 1.0000000000000000e+03), composition_208046, -1.0000000000000000e+00), NTI206559);
		var properties_208069 = nimCopy(null, properties_detail_206683(f_t_208056, density_208068.Field0, composition_208046), NTI206646);
		var orifice_diameter_208070 = thermal_expansion_207084(orifice_a_208063, orifice_id_208061, 2.9314999999999998e+02, f_t_208056);
		var meter_diameter_208071 = thermal_expansion_207084(pipe_a_208062, pipe_id_208059, 2.9314999999999998e+02, f_t_208056);
		var beta_208072 = diameter_ratio_207105(orifice_diameter_208070, meter_diameter_208071);
		var velocity_factor_208073 = velocity_factor_207123(beta_208072);
		var discharge_coefs_208074 = nimCopy(null, discharge_constants_207192(meter_diameter_208071, beta_208072), NTI207142);
		var kappa_208075 = 0.0;
		var si_base_density_208076 = mol_lto_kgm3_208023(base_properties_208066.Field0, base_density_208065.Field0);
		var si_density_208077 = mol_lto_kgm3_208023(properties_208069.Field0, density_208068.Field0);
		if ((0.0 < properties_208069.Field12)) {
		kappa_208075 = properties_208069.Field12;
		}
		else {
			kappa_208075 = 1.0000000000000000e+00;
		}
		
		var expansion_factor_208080 = expansion_factor_207243(beta_208072, differential_pressure_208045, flow_pressure_208044, kappa_208075);
		var iteration_flow_factor_208082 = iteration_flow_factor_207268(orifice_diameter_208070, meter_diameter_208071, differential_pressure_208045, velocity_factor_208073, 1.0267999999999999e-05, si_density_208077, expansion_factor_208080);
		var discharge_coefficient_208083 = nimCopy(null, discharge_coefficient_207324(discharge_coefs_208074, iteration_flow_factor_208082), NTI207302);
		var colontmp__208146 = mass_flow_207373(discharge_coefficient_208083.Field0, orifice_diameter_208070, differential_pressure_208045, velocity_factor_208073, si_density_208077, expansion_factor_208080);
		var colontmp__208147 = actual_flow_207397(discharge_coefficient_208083.Field0, orifice_diameter_208070, differential_pressure_208045, velocity_factor_208073, si_density_208077, expansion_factor_208080);
		var colontmp__208148 = base_flow_207419(discharge_coefficient_208083.Field0, orifice_diameter_208070, differential_pressure_208045, velocity_factor_208073, si_base_density_208076, si_density_208077, expansion_factor_208080);
		nimCopy(result_208054, {Field0: colontmp__208146, Field1: colontmp__208147, Field2: colontmp__208148}, NTI208015);
	} while (false);

	return result_208054;

}
module.exports = orificeCalculator
