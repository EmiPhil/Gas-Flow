/* Generated by the Nim Compiler v1.0.6 */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI62028 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI61300 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI61302 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI61055 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI61142 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI60662 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI60672 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI60670 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI60668 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI60666 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI60664 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI60674 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI59015 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI60676 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI60070 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI104 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI59033 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI60589 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI59037 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI59035 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI60502 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI60076 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI60074 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI124 = {size: 0,kind: 36,base: null,node: null,finalizer: null};
var NTI60072 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI60078 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI3642 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3646 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3608 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3714 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI114 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI140 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI3708 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI3626 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3628 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI3658 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI138 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NNI3658 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3658.node = NNI3658;
var NNI3628 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3628.node = NNI3628;
NTI3708.base = NTI3626;
NTI3714.base = NTI3626;
var NNI3626 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI3708, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI140, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI138, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI138, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI114, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI3714, name: "up", sons: null}]};
NTI3626.node = NNI3626;
var NNI3608 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3608.node = NNI3608;
NTI3626.base = NTI3608;
NTI3628.base = NTI3626;
NTI3658.base = NTI3628;
var NNI3646 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3646.node = NNI3646;
var NNI3642 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI3642.node = NNI3642;
NTI3642.base = NTI3628;
NTI3646.base = NTI3642;
var NNI60072 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI124, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI124, name: "Field3", sons: null}]};
NTI60072.node = NNI60072;
var NNI60074 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}]};
NTI60074.node = NNI60074;
var NNI60076 = {kind: 2, len: 1, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}]};
NTI60076.node = NNI60076;
var NNI60078 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI60072, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI60074, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI60076, name: "Field2", sons: null}]};
NTI60078.node = NNI60078;
var NNI60502 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI59035, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI59037, name: "Field1", sons: null}]};
NTI60502.node = NNI60502;
var NNI60589 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI59033, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI104, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI138, name: "Field2", sons: null}]};
NTI60589.node = NNI60589;
var NNI60070 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI124, name: "Field2", sons: null}]};
NTI60070.node = NNI60070;
var NNI60674 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI124, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI124, name: "Field3", sons: null}]};
NTI60674.node = NNI60674;
var NNI60676 = {kind: 2, len: 13, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI59015, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI59035, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI59037, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI60674, name: "Field3", sons: null}, 
{kind: 1, offset: "Field4", len: 0, typ: NTI60664, name: "Field4", sons: null}, 
{kind: 1, offset: "Field5", len: 0, typ: NTI60666, name: "Field5", sons: null}, 
{kind: 1, offset: "Field6", len: 0, typ: NTI60668, name: "Field6", sons: null}, 
{kind: 1, offset: "Field7", len: 0, typ: NTI60670, name: "Field7", sons: null}, 
{kind: 1, offset: "Field8", len: 0, typ: NTI60670, name: "Field8", sons: null}, 
{kind: 1, offset: "Field9", len: 0, typ: NTI60672, name: "Field9", sons: null}, 
{kind: 1, offset: "Field10", len: 0, typ: NTI60662, name: "Field10", sons: null}, 
{kind: 1, offset: "Field11", len: 0, typ: NTI124, name: "Field11", sons: null}, 
{kind: 1, offset: "Field12", len: 0, typ: NTI124, name: "Field12", sons: null}]};
NTI60676.node = NNI60676;
var NNI61142 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI61055, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI61055, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI61055, name: "Field2", sons: null}, 
{kind: 1, offset: "Field3", len: 0, typ: NTI61055, name: "Field3", sons: null}, 
{kind: 1, offset: "Field4", len: 0, typ: NTI61055, name: "Field4", sons: null}]};
NTI61142.node = NNI61142;
var NNI61302 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI61055, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI61300, name: "Field1", sons: null}]};
NTI61302.node = NNI61302;
var NNI62028 = {kind: 2, len: 3, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI124, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI124, name: "Field1", sons: null}, 
{kind: 1, offset: "Field2", len: 0, typ: NTI124, name: "Field2", sons: null}]};
NTI62028.node = NNI62028;
				var ki_59371 = [4.6192549999999999e-01, 4.4791530000000002e-01, 4.5574890000000001e-01, 5.2792090000000003e-01, 5.8374899999999996e-01, 6.4069370000000003e-01, 6.3414230000000005e-01, 6.7385770000000000e-01, 6.7983070000000001e-01, 7.1751180000000003e-01, 7.5251889999999999e-01, 7.8495499999999996e-01, 8.1527309999999997e-01, 8.4378260000000005e-01, 3.5149160000000002e-01, 4.1869540000000000e-01, 4.5338940000000000e-01, 3.8258680000000000e-01, 4.6182630000000002e-01, 3.5898880000000000e-01, 4.2165510000000000e-01];
				var ei_59144 = [1.5131829999999999e+02, 9.9737780000000001e+01, 2.4196060000000000e+02, 2.4416669999999999e+02, 2.9811829999999998e+02, 3.2406889999999999e+02, 3.3763889999999998e+02, 3.6559989999999999e+02, 3.7068230000000000e+02, 4.0263629300000002e+02, 4.2772262999999998e+02, 4.5032502199999999e+02, 4.7084089100000000e+02, 4.8955837300000002e+02, 2.6957940000000001e+01, 1.2276670000000000e+02, 1.0553480000000000e+02, 5.1401559999999995e+02, 2.9635500000000002e+02, 2.6101109999999998e+00, 1.1962990000000001e+02];
													var gn_59110 = [0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 1, 0, 0];
												var gij_59364 = [[1.0000000000000000e+00, 1.0000000000000000e+00, 8.0765299999999995e-01, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.9573100000000001e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 9.8274600000000001e-01, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 3.7029600000000001e-01, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.6730900000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00]];
												var gi_59378 = [0.0, 2.7814999999999999e-02, 1.8906500000000001e-01, 7.9299999999999995e-02, 1.4123900000000000e-01, 2.5669199999999998e-01, 2.8183500000000000e-01, 3.3226699999999998e-01, 3.6691099999999999e-01, 2.8973100000000002e-01, 3.3754200000000001e-01, 3.8338100000000003e-01, 4.2735400000000001e-01, 4.6965899999999999e-01, 3.4368999999999997e-02, 2.1000000000000001e-02, 3.8953000000000002e-02, 3.3250000000000002e-01, 8.8499999999999995e-02, 0.0, 0.0];
													var qn_59118 = [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1];
												var qi_59385 = [0.0, 0.0, 6.8999999999999995e-01, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0677500000000000e+00, 6.3327599999999995e-01, 0.0, 0.0];
													var fn_59102 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
												var fi_59392 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0000000000000000e+00, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0];
													var sn_59126 = [0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
												var si_59399 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.5822000000000001e+00, 3.9000000000000001e-01, 0.0, 0.0];
													var wn_59134 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
												var wi_59406 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0000000000000000e+00, 0.0, 0.0, 0.0];
												var an_59068 = [1.5383260000000001e-01, 1.3419530000000000e+00, -2.9985830000000000e+00, -4.8312279999999999e-02, 3.7579649999999998e-01, -1.5895750000000000e+00, -5.3588469999999999e-02, 8.8659463000000005e-01, -7.1023703999999999e-01, -1.4717220000000000e+00, 1.3218503500000001e+00, -7.8665925000000003e-01, 2.2912899999999998e-09, 1.5767239999999999e-01, -4.3638640000000001e-01, -4.4081589999999997e-02, -3.4338880000000000e-03, 3.2059049999999999e-02, 2.4873550000000001e-02, 7.3322789999999999e-02, -1.6005730000000001e-03, 6.4247060000000000e-01, -4.1626010000000002e-01, -6.6899570000000005e-02, 2.7917950000000002e-01, -6.9660509999999998e-01, -2.8605890000000002e-03, -8.0988359999999999e-03, 3.1505470000000000e+00, 7.2244789999999998e-03, -7.0575290000000002e-01, 5.3497919999999999e-01, -7.9314910000000002e-02, -1.4184650000000001e+00, -5.9990499999999998e-17, 1.0584020000000000e-01, 3.4317290000000000e-02, -7.0228469999999996e-03, 2.4955870000000002e-02, 4.2968180000000002e-02, 7.4654529999999997e-01, -2.9196129999999998e-01, 7.2946160000000004e+00, -9.9367570000000001e+00, -5.3998079999999999e-03, -2.4325669999999999e-01, 4.9870159999999997e-02, 3.7337970000000001e-03, 1.8749510000000000e+00, 2.1681439999999999e-03, -6.5871639999999998e-01, 2.0551799999999999e-04, 9.7761949999999997e-03, -2.0487080000000001e-02, 1.5573220000000000e-02, 6.8624150000000002e-03, -1.2267520000000000e-03, 2.8509080000000001e-03];
												var eij_59202 = [[1.0000000000000000e+00, 9.7163999999999995e-01, 9.6064400000000005e-01, 1.0000000000000000e+00, 9.9463500000000005e-01, 1.0195300000000000e+00, 9.8984399999999995e-01, 1.0023500000000001e+00, 9.9926800000000005e-01, 1.1072740000000001e+00, 8.8088000000000000e-01, 8.8097300000000001e-01, 8.8106700000000004e-01, 8.8116099999999997e-01, 1.1705200000000000e+00, 1.0000000000000000e+00, 9.9012599999999995e-01, 7.0821800000000001e-01, 9.3148399999999998e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0227400000000000e+00, 9.7011999999999998e-01, 9.4593899999999997e-01, 9.4691400000000003e-01, 9.7338400000000003e-01, 9.5933999999999997e-01, 9.4552000000000003e-01, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0863200000000000e+00, 1.0209999999999999e+00, 1.0057100000000001e+00, 7.4695400000000001e-01, 9.0227100000000005e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.2505300000000001e-01, 9.6023700000000001e-01, 9.0684900000000002e-01, 8.9736199999999999e-01, 7.2625499999999998e-01, 8.5976399999999997e-01, 8.5513399999999995e-01, 8.3122900000000000e-01, 8.0830999999999997e-01, 7.8632299999999999e-01, 7.6517100000000005e-01, 1.2817900000000000e+00, 1.0000000000000000e+00, 1.5000000000000000e+00, 8.4940800000000005e-01, 9.5505200000000001e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0225599999999999e+00, 1.0000000000000000e+00, 1.0130600000000001e+00, 1.0000000000000000e+00, 1.0053200000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.1644600000000001e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 6.9316800000000001e-01, 9.4687100000000002e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0048999999999999e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0347869999999999e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.3000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.3000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0086919999999999e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0101260000000001e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0115010000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0128210000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0140890000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.1000000000000001e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00]];
												var un_59094 = [0.0, 5.0000000000000000e-01, 1.0000000000000000e+00, 3.5000000000000000e+00, -5.0000000000000000e-01, 4.5000000000000000e+00, 5.0000000000000000e-01, 7.5000000000000000e+00, 9.5000000000000000e+00, 6.0000000000000000e+00, 1.2000000000000000e+01, 1.2500000000000000e+01, -6.0000000000000000e+00, 2.0000000000000000e+00, 3.0000000000000000e+00, 2.0000000000000000e+00, 2.0000000000000000e+00, 1.1000000000000000e+01, -5.0000000000000000e-01, 5.0000000000000000e-01, 0.0, 4.0000000000000000e+00, 6.0000000000000000e+00, 2.1000000000000000e+01, 2.3000000000000000e+01, 2.2000000000000000e+01, -1.0000000000000000e+00, -5.0000000000000000e-01, 7.0000000000000000e+00, -1.0000000000000000e+00, 6.0000000000000000e+00, 4.0000000000000000e+00, 1.0000000000000000e+00, 9.0000000000000000e+00, -1.3000000000000000e+01, 2.1000000000000000e+01, 8.0000000000000000e+00, -5.0000000000000000e-01, 0.0, 2.0000000000000000e+00, 7.0000000000000000e+00, 9.0000000000000000e+00, 2.2000000000000000e+01, 2.3000000000000000e+01, 1.0000000000000000e+00, 9.0000000000000000e+00, 3.0000000000000000e+00, 8.0000000000000000e+00, 2.3000000000000000e+01, 1.5000000000000000e+00, 5.0000000000000000e+00, -5.0000000000000000e-01, 4.0000000000000000e+00, 7.0000000000000000e+00, 3.0000000000000000e+00, 0.0, 1.0000000000000000e+00, 0.0];
								var kij_59310 = [[1.0000000000000000e+00, 1.0036300000000000e+00, 9.9593299999999996e-01, 1.0000000000000000e+00, 1.0076190000000000e+00, 1.0000000000000000e+00, 9.9759600000000004e-01, 1.0000000000000000e+00, 1.0025290000000000e+00, 9.8296200000000000e-01, 9.8356500000000002e-01, 9.8270700000000000e-01, 9.8184899999999997e-01, 9.8099099999999995e-01, 1.0232600000000001e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000800000000001e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 9.8236100000000004e-01, 1.0079600000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0322700000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.4259599999999999e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0085100000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.1018299999999996e-01, 8.9536199999999999e-01, 8.8115200000000005e-01, 8.6751999999999996e-01, 8.5440600000000000e-01, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0077900000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.8689300000000002e-01, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0203400000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.9996900000000000e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.6813000000000005e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.6287000000000000e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.5782800000000001e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.5244099999999998e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.4833800000000001e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00]];
								var uij_59256 = [[1.0000000000000000e+00, 8.8610599999999995e-01, 9.6382699999999999e-01, 1.0000000000000000e+00, 9.9087700000000001e-01, 1.0000000000000000e+00, 9.9229100000000003e-01, 1.0000000000000000e+00, 1.0036700000000001e+00, 1.3025760000000000e+00, 1.1919040000000001e+00, 1.2057690000000001e+00, 1.2196340000000001e+00, 1.2334980000000000e+00, 1.1563900000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 7.3683299999999996e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 8.3505799999999997e-01, 8.1643100000000002e-01, 9.1550200000000004e-01, 1.0000000000000000e+00, 9.9355599999999999e-01, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 4.0883799999999998e-01, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.9347600000000003e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.6987000000000001e-01, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0666380000000000e+00, 1.0776340000000000e+00, 1.0881780000000001e+00, 1.0982909999999999e+00, 1.1080209999999999e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.0000000000000002e-01, 1.0000000000000000e+00, 1.0452900000000001e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0651729999999999e+00, 1.2500000000000000e+00, 1.2500000000000000e+00, 1.2500000000000000e+00, 1.2500000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.6166600000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.7192599999999996e-01, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0289729999999999e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0337540000000001e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0383380000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0427350000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0469660000000001e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00]];

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_24827, src_24828, ti_24829) {
	var result_25019 = null;

		switch (ti_24829.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_24801(ti_24829))) {
			result_25019 = src_24828;
			}
			else {
				result_25019 = [src_24828[0], src_24828[1]];
			}
			
			break;
		case 19:
			      if (dest_24827 === null || dest_24827 === undefined) {
        dest_24827 = {};
      }
      else {
        for (var key in dest_24827) { delete dest_24827[key]; }
      }
      for (var key in src_24828) { dest_24827[key] = src_24828[key]; }
      result_25019 = dest_24827;
    
			break;
		case 18:
		case 17:
			if (!((ti_24829.base == null))) {
			result_25019 = nimCopy(dest_24827, src_24828, ti_24829.base);
			}
			else {
			if ((ti_24829.kind == 17)) {
			result_25019 = (dest_24827 === null || dest_24827 === undefined) ? {m_type: ti_24829} : dest_24827;
			}
			else {
				result_25019 = (dest_24827 === null || dest_24827 === undefined) ? {} : dest_24827;
			}
			}
			nimCopyAux(result_25019, src_24828, ti_24829.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_24828 === null) {
        result_25019 = null;
      }
      else {
        if (dest_24827 === null || dest_24827 === undefined) {
          dest_24827 = new Array(src_24828.length);
        }
        else {
          dest_24827.length = src_24828.length;
        }
        result_25019 = dest_24827;
        for (var i = 0; i < src_24828.length; ++i) {
          result_25019[i] = nimCopy(result_25019[i], src_24828[i], ti_24829.base);
        }
      }
    
			break;
		case 28:
			      if (src_24828 !== null) {
        result_25019 = src_24828.slice(0);
      }
    
			break;
		default: 
			result_25019 = src_24828;
			break;
		}

	return result_25019;

}

function makeNimstrLit(c_23270) {
		  var ln = c_23270.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_23270.charCodeAt(i);
  }
  return result;
  

	
}

function cstrToNimstr(c_23287) {
		  var ln = c_23287.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_23287.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_23287.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_23304) {
										var Tmp5;
						var Tmp7;

	var result_23305 = null;

		var res_23363 = new_seq_23336((s_23304 != null ? s_23304.length : 0));
		var i_23365 = 0;
		var j_23367 = 0;
		L1: do {
				L2: while (true) {
				if (!(i_23365 < (s_23304 != null ? s_23304.length : 0))) break L2;
					var c_23368 = s_23304[i_23365];
					if ((c_23368 < 128)) {
					res_23363[j_23367] = String.fromCharCode(c_23368);
					i_23365 += 1;
					}
					else {
						var helper_23391 = new_seq_23336(0);
						L3: do {
								L4: while (true) {
								if (!true) break L4;
									var code_23392 = c_23368.toString(16);
									if (((code_23392 != null ? code_23392.length : 0) == 1)) {
									if (helper_23391 != null) { helper_23391.push("%0"); } else { helper_23391 = ["%0"]; };
									}
									else {
									if (helper_23391 != null) { helper_23391.push("%"); } else { helper_23391 = ["%"]; };
									}
									
									if (helper_23391 != null) { helper_23391.push(code_23392); } else { helper_23391 = [code_23392]; };
									i_23365 += 1;
										if (((s_23304 != null ? s_23304.length : 0) <= i_23365)) Tmp5 = true; else {											Tmp5 = (s_23304[i_23365] < 128);										}									if (Tmp5) {
									break L3;
									}
									
									c_23368 = s_23304[i_23365];
								}
						} while(false);
++excHandler;
						Tmp7 = framePtr;
						try {
						res_23363[j_23367] = decodeURIComponent(helper_23391.join(""));
--excHandler;
} catch (EXC) {
 var prevJSError = lastJSError;
 lastJSError = EXC;
 --excHandler;
						framePtr = Tmp7;
						res_23363[j_23367] = helper_23391.join("");
						lastJSError = prevJSError;
						} finally {
						framePtr = Tmp7;
						}
					}
					
					j_23367 += 1;
				}
		} while(false);
		if (res_23363 === null) res_23363 = [];
               if (res_23363.length < j_23367) { for (var i=res_23363.length;i<j_23367;++i) res_23363.push(null); }
               else { res_23363.length = j_23367; };
		result_23305 = res_23363.join("");

	return result_23305;

}

function raiseException(e_21618, ename_21619) {
		e_21618.name = ename_21619;
		if ((excHandler == 0)) {
		unhandledException(e_21618);
		}
		
		throw e_21618;

	
}

function chckIndx(i_25105, a_25106, b_25107) {
			var Tmp1;

	var result_25108 = 0;

	BeforeRet: do {
			if (!(a_25106 <= i_25105)) Tmp1 = false; else {				Tmp1 = (i_25105 <= b_25107);			}		if (Tmp1) {
		result_25108 = i_25105;
		break BeforeRet;
		}
		else {
		raiseIndexError(i_25105, a_25106, b_25107);
		}
		
	} while (false);

	return result_25108;

}

function addInt(a_23803, b_23804) {
		    var result = a_23803 + b_23804;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function subInt(a_23821, b_23822) {
		    var result = a_23821 - b_23822;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
						var kn_59087 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 2, 2, 4, 4, 0, 0, 2, 2, 2, 4, 4, 4, 4, 0, 1, 1, 2, 2, 3, 3, 4, 4, 4, 0, 0, 2, 2, 2, 4, 4, 0, 2, 2, 4, 4, 0, 2, 0, 2, 1, 2, 2, 2, 2];
						var bn_59079 = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 4, 4, 4, 4, 4, 4, 5, 5, 5, 5, 5, 6, 6, 7, 7, 8, 8, 8, 9, 9];
						var molar_masses_59029 = [1.6042999999999999e+01, 2.8013500000000001e+01, 4.4009999999999998e+01, 3.0070000000000000e+01, 4.4097000000000001e+01, 5.8122999999999998e+01, 5.8122999999999998e+01, 7.2150000000000006e+01, 7.2150000000000006e+01, 8.6177000000000007e+01, 1.0020399999999999e+02, 1.1423099999999999e+02, 1.2825800000000001e+02, 1.4228500000000000e+02, 2.0158999999999998e+00, 3.1998799999999999e+01, 2.8010000000000002e+01, 1.8015300000000000e+01, 3.4082000000000001e+01, 4.0026000000000002e+00, 3.9948000000000000e+01];
												var th0i_59636 = [[1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 8.2065899999999999e+02, 1.7841000000000000e+02, 1.0628199999999999e+03, 1.0905300000000000e+03], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 6.6273800000000006e+02, 6.8056200000000001e+02, 1.7400599999999999e+03, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 9.1930600000000004e+02, 8.6507000000000005e+02, 4.8355300000000000e+02, 3.4110899999999998e+02], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 5.5931399999999996e+02, 2.2328399999999999e+02, 1.0313800000000001e+03, 1.0712900000000000e+03], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 4.7985599999999999e+02, 2.0089300000000000e+02, 9.5531200000000001e+02, 1.0272900000000000e+03], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 4.3826999999999998e+02, 1.9801800000000000e+02, 1.9050200000000000e+03, 8.9376499999999999e+02], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 4.6826999999999998e+02, 1.8363600000000000e+02, 1.9140999999999999e+03, 9.0318499999999995e+02], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 2.9250299999999999e+02, 9.1023699999999997e+02, 1.9193699999999999e+03, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.7866999999999999e+02, 8.4053800000000001e+02, 1.7742500000000000e+03, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.8232599999999999e+02, 8.5920699999999999e+02, 1.8265899999999999e+03, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.6978899999999999e+02, 8.3619500000000005e+02, 1.7604600000000000e+03, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.5892200000000000e+02, 8.1506399999999996e+02, 1.6930699999999999e+03, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.5685400000000001e+02, 8.1488199999999995e+02, 1.6937900000000000e+03, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.6494700000000000e+02, 8.3626400000000001e+02, 1.7502400000000000e+03, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 2.2873400000000001e+02, 3.2684300000000002e+02, 1.6517100000000000e+03, 1.6716900000000001e+03], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 2.2357100000000000e+03, 1.1166900000000001e+03, 0.0, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.5504500000000000e+03, 7.0452499999999998e+02, 0.0, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 2.6879500000000002e+02, 1.1414100000000001e+03, 2.5073699999999999e+03, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 1.8336300000000001e+03, 8.4718100000000004e+02, 0.0, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 0.0, 0.0, 0.0, 0.0], [1.0000000000000000e+00, 1.0000000000000000e+00, 1.0000000000000000e+00, 0.0, 0.0, 0.0, 0.0]];
												var n0i_59581 = [[3.3035699694317998e+01, -1.5999691510000001e+04, 3.0008800000000000e+00, 7.6315000000000000e-01, 4.5999999999999999e-03, 8.7443200000000001e+00, -4.4692100000000003e+00], [2.0764973574317995e+01, -2.8017290720000001e+03, 2.5003099999999998e+00, 1.3732000000000000e-01, -1.4660000000000001e-01, 9.0066000000000002e-01, 0.0], [2.3855712684317993e+01, -4.9021715160000003e+03, 2.5000200000000001e+00, 2.0445199999999999e+00, -1.0604400000000000e+00, 2.0336599999999998e+00, 1.3930000000000000e-02], [3.9927325104317994e+01, -2.3639653010000002e+04, 3.0026299999999999e+00, 4.3393899999999999e+00, 1.2372200000000000e+00, 1.3197400000000000e+01, -6.0198900000000002e+00], [4.7906361914317991e+01, -3.1236635510000000e+04, 3.0293899999999998e+00, 6.6056900000000001e+00, 3.1970000000000001e+00, 1.9192100000000000e+01, -8.3726699999999994e+00], [3.7499069214317991e+01, -3.8525502760000003e+04, 3.0671400000000002e+00, 8.9757499999999997e+00, 5.2515599999999996e+00, 2.5142299999999999e+01, 1.6138800000000000e+01], [3.9729643554317995e+01, -3.8957809329999996e+04, 3.3394400000000002e+00, 9.4489300000000007e+00, 6.8940599999999996e+00, 2.4461800000000000e+01, 1.4782400000000001e+01], [4.6369451984317990e+01, -5.1198309459999997e+04, 3.0000000000000000e+00, 1.1761799999999999e+01, 2.0110099999999999e+01, 3.3168799999999997e+01, 0.0], [4.5875636614317990e+01, -4.5215830000000002e+04, 3.0000000000000000e+00, 8.9504300000000008e+00, 2.1835999999999999e+01, 3.3403199999999998e+01, 0.0], [5.0194437604317997e+01, -5.2746833180000001e+04, 3.0000000000000000e+00, 1.1697699999999999e+01, 2.6814200000000000e+01, 3.8616399999999999e+01, 0.0], [5.5273582034317997e+01, -5.7104810559999998e+04, 3.0000000000000000e+00, 1.3726599999999999e+01, 3.0470700000000001e+01, 4.3556100000000001e+01, 0.0], [6.0455575064317991e+01, -6.0546763850000003e+04, 3.0000000000000000e+00, 1.5686500000000001e+01, 3.3802900000000001e+01, 4.8173099999999998e+01, 0.0], [6.5293734734317994e+01, -6.6600128370000006e+04, 3.0000000000000000e+00, 1.8024100000000001e+01, 3.8123500000000000e+01, 5.3341500000000003e+01, 0.0], [6.9136357264318008e+01, -7.4131454830000002e+04, 3.0000000000000000e+00, 2.1006900000000002e+01, 4.3493099999999998e+01, 5.8365699999999997e+01, 0.0], [1.6272468604317996e+01, -5.8369436960000003e+03, 1.4790600000000000e+00, 9.5806000000000002e-01, 4.5444000000000001e-01, 1.5603899999999999e+00, -1.3755999999999999e+00], [1.9998983024317994e+01, -2.3183226900000000e+03, 2.5014599999999998e+00, 1.0755800000000000e+00, 1.0133399999999999e+00, 0.0, 0.0], [2.0655134714317995e+01, -2.6352441159999998e+03, 2.5005500000000001e+00, 1.0286500000000001e+00, 4.9300000000000004e-03, 0.0, 0.0], [2.4776092774317995e+01, -7.7667330780000002e+03, 3.0039199999999999e+00, 1.0590000000000000e-02, 9.8763000000000001e-01, 3.0690400000000002e+00, 0.0], [2.4780360124317994e+01, -6.0690358690000003e+03, 3.0000000000000000e+00, 3.1194199999999999e+00, 1.0024299999999999e+00, 0.0, 0.0], [1.3243660794317995e+01, -7.4537500000000000e+02, 1.5000000000000000e+00, 0.0, 0.0, 0.0, 0.0], [1.3243660794317995e+01, -7.4537500000000000e+02, 1.5000000000000000e+00, 0.0, 0.0, 0.0, 0.0]];
process.exitCode = 0;
var global_raise_hook_18618 = [null];
var local_raise_hook_18623 = [null];
var out_of_mem_hook_18626 = [null];
var ki25_59411 = [new Float64Array(21)];
var ei25_59416 = [new Float64Array(21)];
var kij5_59426 = [[new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21)]];
var uij5_59436 = [[new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21)]];
var gij5_59446 = [[new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21), new Float64Array(21)]];
var bsnij_59447 = [0.0];
var bsnij2_59470 = [[[new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)], [new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18), new Float64Array(18)]]];
var bs_59476 = [new Float64Array(18)];
var csn_59481 = [new Float64Array(58)];
L1: do {
	var i_59491 = [0];
	var res_59755 = 1;
	L2: do {
			L3: while (true) {
			if (!(res_59755 <= 21)) break L3;
				i_59491[0] = res_59755;
				ki25_59411[0][(i_59491[0])-1] = Math.pow(ki_59371[(i_59491[0])-1], 2.5000000000000000e+00);
				ei25_59416[0][(i_59491[0])-1] = Math.pow(ei_59144[(i_59491[0])-1], 2.5000000000000000e+00);
				res_59755 += 1;
			}
	} while(false);
} while(false);
L4: do {
	var i_59501 = [0];
	var res_59773 = 1;
	L5: do {
			L6: while (true) {
			if (!(res_59773 <= 21)) break L6;
				i_59501[0] = res_59773;
				L7: do {
					var j_59511 = [0];
					var res_59768 = 1;
					L8: do {
							L9: while (true) {
							if (!(res_59768 <= 21)) break L9;
								j_59511[0] = res_59768;
								L10: do {
									var k_59521 = [0];
									var res_59763 = 1;
									L11: do {
											L12: while (true) {
											if (!(res_59763 <= 18)) break L12;
												k_59521[0] = res_59763;
												bsnij_59447[0] = 1.0000000000000000e+00;
												if ((gn_59110[(k_59521[0])-1] == 1)) {
												bsnij_59447[0] = ((gij_59364[(i_59501[0])-1][(j_59511[0])-1] * (gi_59378[(i_59501[0])-1] + gi_59378[(j_59511[0])-1])) / 2.0000000000000000e+00);
												}
												
												if ((qn_59118[(k_59521[0])-1] == 1)) {
												bsnij_59447[0] = ((bsnij_59447[0] * qi_59385[(i_59501[0])-1]) * qi_59385[(j_59511[0])-1]);
												}
												
												if ((fn_59102[(k_59521[0])-1] == 1)) {
												bsnij_59447[0] = ((bsnij_59447[0] * fi_59392[(i_59501[0])-1]) * fi_59392[(j_59511[0])-1]);
												}
												
												if ((sn_59126[(k_59521[0])-1] == 1)) {
												bsnij_59447[0] = ((bsnij_59447[0] * si_59399[(i_59501[0])-1]) * si_59399[(j_59511[0])-1]);
												}
												
												if ((wn_59134[(k_59521[0])-1] == 1)) {
												bsnij_59447[0] = ((bsnij_59447[0] * wi_59406[(i_59501[0])-1]) * wi_59406[(j_59511[0])-1]);
												}
												
												bsnij2_59470[0][(i_59501[0])-1][(j_59511[0])-1][(k_59521[0])-1] = (((an_59068[(k_59521[0])-1] * Math.pow((eij_59202[(i_59501[0])-1][(j_59511[0])-1] * Math.sqrt((ei_59144[(i_59501[0])-1] * ei_59144[(j_59511[0])-1]))), un_59094[(k_59521[0])-1])) * Math.pow((ki_59371[(i_59501[0])-1] * ki_59371[(j_59511[0])-1]), 1.5000000000000000e+00)) * bsnij_59447[0]);
												res_59763 += 1;
											}
									} while(false);
								} while(false);
								kij5_59426[0][(i_59501[0])-1][(j_59511[0])-1] = (((Math.pow(kij_59310[(i_59501[0])-1][(j_59511[0])-1], 5.0000000000000000e+00) - 1.0000000000000000e+00) * ki25_59411[0][(i_59501[0])-1]) * ki25_59411[0][(j_59511[0])-1]);
								uij5_59436[0][(i_59501[0])-1][(j_59511[0])-1] = (((Math.pow(uij_59256[(i_59501[0])-1][(j_59511[0])-1], 5.0000000000000000e+00) - 1.0000000000000000e+00) * ei25_59416[0][(i_59501[0])-1]) * ei25_59416[0][(j_59511[0])-1]);
								gij5_59446[0][(i_59501[0])-1][(j_59511[0])-1] = (((gij_59364[(i_59501[0])-1][(j_59511[0])-1] - 1.0000000000000000e+00) * (gi_59378[(i_59501[0])-1] + gi_59378[(j_59511[0])-1])) / 2.0000000000000000e+00);
								res_59768 += 1;
							}
					} while(false);
				} while(false);
				res_59773 += 1;
			}
	} while(false);
} while(false);
var k3_59638 = [0.0];
var x_fields_59644 = [new Float64Array(21)];
var temp_old_60264 = [0.0];
var tun_60270 = [new Float64Array(58)];
var d_pd_dsave_60508 = [0.0];

function is_fat_pointer_24801(ti_24803) {
	var result_24804 = false;

	BeforeRet: do {
		result_24804 = !((ConstSet1[ti_24803.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_24804;

}

function nimCopyAux(dest_24832, src_24833, n_24835) {
		switch (n_24835.kind) {
		case 0:
			break;
		case 1:
			      dest_24832[n_24835.offset] = nimCopy(dest_24832[n_24835.offset], src_24833[n_24835.offset], n_24835.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_24835.sons.length; i++) {
      nimCopyAux(dest_24832, src_24833, n_24835.sons[i]);
    }
    
			break;
		case 3:
			      dest_24832[n_24835.offset] = nimCopy(dest_24832[n_24835.offset], src_24833[n_24835.offset], n_24835.typ);
      for (var i = 0; i < n_24835.sons.length; ++i) {
        nimCopyAux(dest_24832, src_24833, n_24835.sons[i][1]);
      }
    
			break;
		}

	
}

function abs_12649(x_12651) {
		var Tmp1;

	var result_12652 = 0.0;

		if ((x_12651 < 0.0)) {
		Tmp1 = -(x_12651);
		}
		else {
		Tmp1 = x_12651;
		}
		
		result_12652 = Tmp1;

	return result_12652;

}

function add_18638(x_18641, x_18641_Idx, y_18642) {
		      if (x_18641[x_18641_Idx] === null) { x_18641[x_18641_Idx] = []; }
      var off = x_18641[x_18641_Idx].length;
      x_18641[x_18641_Idx].length += y_18642.length;
      for (var i = 0; i < y_18642.length; ++i) {
        x_18641[x_18641_Idx][off+i] = y_18642.charCodeAt(i);
      }
    

	
}

function new_seq_23336(len_23339) {
	var result_23341 = null;

		result_23341 = new Array(len_23339); for (var i=0;i<len_23339;++i) {result_23341[i]=null;}
	return result_23341;

}

function unhandledException(e_21529) {
		var buf_21530 = [[]];
		if (!(((e_21529.message != null ? e_21529.message.length : 0) == 0))) {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(e_21529.message); } else { buf_21530[0] = e_21529.message.slice(); };
		}
		else {
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_21530[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit(" [")); } else { buf_21530[0] = makeNimstrLit(" ["); };
		add_18638(buf_21530, 0, e_21529.name);
		if (buf_21530[0] != null) { buf_21530[0] = (buf_21530[0]).concat(makeNimstrLit("]\x0A")); } else { buf_21530[0] = makeNimstrLit("]\x0A"); };
		var cbuf_21601 = toJSStr(buf_21530[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_21601);
  }
  else {
    throw cbuf_21601;
  }
  

	
}

function raiseIndexError(i_22655, a_22656, b_22657) {
		var Tmp1;

		var eHEX60gensym22802_23003 = null;
		eHEX60gensym22802_23003 = {m_type: NTI3658, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		if ((b_22657 < a_22656)) {
		Tmp1 = makeNimstrLit("index out of bounds, the container is empty");
		}
		else {
		Tmp1 = (makeNimstrLit("index ") || []).concat(cstrToNimstr((i_22655)+"") || [],makeNimstrLit(" not in ") || [],cstrToNimstr((a_22656)+"") || [],makeNimstrLit(" .. ") || [],cstrToNimstr((b_22657)+"") || []);
		}
		
		eHEX60gensym22802_23003.message = nimCopy(null, Tmp1, NTI138);
		eHEX60gensym22802_23003.parent = null;
		raiseException(eHEX60gensym22802_23003, "IndexError");

	
}

function raiseOverflow() {
		var eHEX60gensym22058_22203 = null;
		eHEX60gensym22058_22203 = {m_type: NTI3646, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		eHEX60gensym22058_22203.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI138);
		eHEX60gensym22058_22203.parent = null;
		raiseException(eHEX60gensym22058_22203, "OverflowError");

	
}

function HEX2BHEX3D_59875(x_59879, x_59879_Idx, y_59880) {
		x_59879[x_59879_Idx] = (x_59879[x_59879_Idx] + y_59880);

	
}

function HEX2AHEX3D_60007(x_60011, x_60011_Idx, y_60012) {
		x_60011[x_60011_Idx] = (x_60011[x_60011_Idx] * y_60012);

	
}

function x_terms_detail_59778(comp_59780) {
	BeforeRet: do {
		var g_59781 = [0.0];
		var q_59782 = [0.0];
		var q2_59783 = 0.0;
		var f_59784 = [0.0];
		var u_59785 = [0.0];
		var xij_59786 = 0.0;
		var xi2_59787 = 0.0;
		var exit_59788 = true;
		L1: do {
			var i_59798 = 0;
			var res_62164 = 1;
			L2: do {
					L3: while (true) {
					if (!(res_62164 <= 21)) break L3;
						i_59798 = res_62164;
						if ((9.9999999999999995e-08 < abs_12649((comp_59780[chckIndx(i_59798, 1, (comp_59780 != null ? comp_59780.length : 0)+1-1)-1] - x_fields_59644[0][chckIndx(i_59798, 1, (x_fields_59644[0] != null ? x_fields_59644[0].length : 0)+1-1)-1])))) {
						exit_59788 = false;
						}
						
						x_fields_59644[0][chckIndx(i_59798, 1, (x_fields_59644[0] != null ? x_fields_59644[0].length : 0)+1-1)-1] = comp_59780[chckIndx(i_59798, 1, (comp_59780 != null ? comp_59780.length : 0)+1-1)-1];
						res_62164 = addInt(res_62164, 1);
					}
			} while(false);
		} while(false);
		if (exit_59788) {
		break BeforeRet;
		}
		
		k3_59638[0] = 0.0;
		L4: do {
			var i_59808 = 0;
			var res_62170 = 1;
			L5: do {
					L6: while (true) {
					if (!(res_62170 <= 18)) break L6;
						i_59808 = res_62170;
						bs_59476[0][chckIndx(i_59808, 1, (bs_59476[0] != null ? bs_59476[0].length : 0)+1-1)-1] = 0.0;
						res_62170 = addInt(res_62170, 1);
					}
			} while(false);
		} while(false);
		L7: do {
			var i_59873 = 0;
			var gas_a_59874 = 0.0;
			var i_62187 = 1;
			if ((i_62187 <= 21)) {
			L8: do {
					L9: while (true) {
					if (!true) break L9;
						i_59873 = i_62187;
						gas_a_59874 = comp_59780[chckIndx(i_62187, 1, (comp_59780 != null ? comp_59780.length : 0)+1-1)-1];
						L10: do {
							if ((gas_a_59874 == 0.0)) {
							break L10;
							}
							
							xi2_59787 = Math.pow(gas_a_59874, 2.0000000000000000e+00);
							HEX2BHEX3D_59875(k3_59638, 0, (gas_a_59874 * ki25_59411[0][chckIndx(i_59873, 1, (ki25_59411[0] != null ? ki25_59411[0].length : 0)+1-1)-1]));
							HEX2BHEX3D_59875(u_59785, 0, (gas_a_59874 * ei25_59416[0][chckIndx(i_59873, 1, (ei25_59416[0] != null ? ei25_59416[0].length : 0)+1-1)-1]));
							HEX2BHEX3D_59875(g_59781, 0, (gas_a_59874 * gi_59378[chckIndx(i_59873, 1, (gi_59378 != null ? gi_59378.length : 0)+1-1)-1]));
							HEX2BHEX3D_59875(q_59782, 0, (gas_a_59874 * qi_59385[chckIndx(i_59873, 1, (qi_59385 != null ? qi_59385.length : 0)+1-1)-1]));
							HEX2BHEX3D_59875(f_59784, 0, (xi2_59787 * fi_59392[chckIndx(i_59873, 1, (fi_59392 != null ? fi_59392.length : 0)+1-1)-1]));
							L11: do {
								var j_59932 = 0;
								var res_62178 = 1;
								L12: do {
										L13: while (true) {
										if (!(res_62178 <= 18)) break L13;
											j_59932 = res_62178;
											HEX2BHEX3D_59875(bs_59476[0], chckIndx(j_59932, 1, (bs_59476[0] != null ? bs_59476[0].length : 0)+1-1)-1, (xi2_59787 * bsnij2_59470[0][chckIndx(i_59873, 1, (bsnij2_59470[0] != null ? bsnij2_59470[0].length : 0)+1-1)-1][chckIndx(i_59873, 1, (bsnij2_59470[0][chckIndx(i_59873, 1, (bsnij2_59470[0] != null ? bsnij2_59470[0].length : 0)+1-1)-1] != null ? bsnij2_59470[0][chckIndx(i_59873, 1, (bsnij2_59470[0] != null ? bsnij2_59470[0].length : 0)+1-1)-1].length : 0)+1-1)-1][chckIndx(j_59932, 1, (bsnij2_59470[0][chckIndx(i_59873, 1, (bsnij2_59470[0] != null ? bsnij2_59470[0].length : 0)+1-1)-1][chckIndx(i_59873, 1, (bsnij2_59470[0][chckIndx(i_59873, 1, (bsnij2_59470[0] != null ? bsnij2_59470[0].length : 0)+1-1)-1] != null ? bsnij2_59470[0][chckIndx(i_59873, 1, (bsnij2_59470[0] != null ? bsnij2_59470[0].length : 0)+1-1)-1].length : 0)+1-1)-1] != null ? bsnij2_59470[0][chckIndx(i_59873, 1, (bsnij2_59470[0] != null ? bsnij2_59470[0].length : 0)+1-1)-1][chckIndx(i_59873, 1, (bsnij2_59470[0][chckIndx(i_59873, 1, (bsnij2_59470[0] != null ? bsnij2_59470[0].length : 0)+1-1)-1] != null ? bsnij2_59470[0][chckIndx(i_59873, 1, (bsnij2_59470[0] != null ? bsnij2_59470[0].length : 0)+1-1)-1].length : 0)+1-1)-1].length : 0)+1-1)-1]));
											res_62178 = addInt(res_62178, 1);
										}
								} while(false);
							} while(false);
						} while(false);
						if ((21 <= i_62187)) {
						break L8;
						}
						
						i_62187 = addInt(i_62187, 1);
					}
			} while(false);
			}
			
		} while(false);
		k3_59638[0] = Math.pow(k3_59638[0], 2.0000000000000000e+00);
		u_59785[0] = Math.pow(u_59785[0], 2.0000000000000000e+00);
		L14: do {
			var i_59950 = 0;
			var res_62205 = 1;
			L15: do {
					L16: while (true) {
					if (!(res_62205 <= 20)) break L16;
						i_59950 = res_62205;
						L17: do {
							if ((comp_59780[chckIndx(i_59950, 1, (comp_59780 != null ? comp_59780.length : 0)+1-1)-1] == 0.0)) {
							break L17;
							}
							
							L18: do {
								var j_59957 = 0;
								var colontmp__62199 = 0;
								colontmp__62199 = addInt(i_59950, 1);
								var res_62200 = colontmp__62199;
								L19: do {
										L20: while (true) {
										if (!(res_62200 <= 21)) break L20;
											j_59957 = res_62200;
											L21: do {
												if ((comp_59780[chckIndx(j_59957, 1, (comp_59780 != null ? comp_59780.length : 0)+1-1)-1] == 0.0)) {
												break L21;
												}
												
												xij_59786 = ((2.0000000000000000e+00 * comp_59780[chckIndx(i_59950, 1, (comp_59780 != null ? comp_59780.length : 0)+1-1)-1]) * comp_59780[chckIndx(j_59957, 1, (comp_59780 != null ? comp_59780.length : 0)+1-1)-1]);
												HEX2BHEX3D_59875(k3_59638, 0, (xij_59786 * kij5_59426[0][chckIndx(i_59950, 1, (kij5_59426[0] != null ? kij5_59426[0].length : 0)+1-1)-1][chckIndx(j_59957, 1, (kij5_59426[0][chckIndx(i_59950, 1, (kij5_59426[0] != null ? kij5_59426[0].length : 0)+1-1)-1] != null ? kij5_59426[0][chckIndx(i_59950, 1, (kij5_59426[0] != null ? kij5_59426[0].length : 0)+1-1)-1].length : 0)+1-1)-1]));
												HEX2BHEX3D_59875(u_59785, 0, (xij_59786 * uij5_59436[0][chckIndx(i_59950, 1, (uij5_59436[0] != null ? uij5_59436[0].length : 0)+1-1)-1][chckIndx(j_59957, 1, (uij5_59436[0][chckIndx(i_59950, 1, (uij5_59436[0] != null ? uij5_59436[0].length : 0)+1-1)-1] != null ? uij5_59436[0][chckIndx(i_59950, 1, (uij5_59436[0] != null ? uij5_59436[0].length : 0)+1-1)-1].length : 0)+1-1)-1]));
												HEX2BHEX3D_59875(g_59781, 0, (xij_59786 * gij5_59446[0][chckIndx(i_59950, 1, (gij5_59446[0] != null ? gij5_59446[0].length : 0)+1-1)-1][chckIndx(j_59957, 1, (gij5_59446[0][chckIndx(i_59950, 1, (gij5_59446[0] != null ? gij5_59446[0].length : 0)+1-1)-1] != null ? gij5_59446[0][chckIndx(i_59950, 1, (gij5_59446[0] != null ? gij5_59446[0].length : 0)+1-1)-1].length : 0)+1-1)-1]));
												L22: do {
													var k_59989 = 0;
													var res_62194 = 1;
													L23: do {
															L24: while (true) {
															if (!(res_62194 <= 18)) break L24;
																k_59989 = res_62194;
																HEX2BHEX3D_59875(bs_59476[0], chckIndx(k_59989, 1, (bs_59476[0] != null ? bs_59476[0].length : 0)+1-1)-1, (xij_59786 * bsnij2_59470[0][chckIndx(i_59950, 1, (bsnij2_59470[0] != null ? bsnij2_59470[0].length : 0)+1-1)-1][chckIndx(j_59957, 1, (bsnij2_59470[0][chckIndx(i_59950, 1, (bsnij2_59470[0] != null ? bsnij2_59470[0].length : 0)+1-1)-1] != null ? bsnij2_59470[0][chckIndx(i_59950, 1, (bsnij2_59470[0] != null ? bsnij2_59470[0].length : 0)+1-1)-1].length : 0)+1-1)-1][chckIndx(k_59989, 1, (bsnij2_59470[0][chckIndx(i_59950, 1, (bsnij2_59470[0] != null ? bsnij2_59470[0].length : 0)+1-1)-1][chckIndx(j_59957, 1, (bsnij2_59470[0][chckIndx(i_59950, 1, (bsnij2_59470[0] != null ? bsnij2_59470[0].length : 0)+1-1)-1] != null ? bsnij2_59470[0][chckIndx(i_59950, 1, (bsnij2_59470[0] != null ? bsnij2_59470[0].length : 0)+1-1)-1].length : 0)+1-1)-1] != null ? bsnij2_59470[0][chckIndx(i_59950, 1, (bsnij2_59470[0] != null ? bsnij2_59470[0].length : 0)+1-1)-1][chckIndx(j_59957, 1, (bsnij2_59470[0][chckIndx(i_59950, 1, (bsnij2_59470[0] != null ? bsnij2_59470[0].length : 0)+1-1)-1] != null ? bsnij2_59470[0][chckIndx(i_59950, 1, (bsnij2_59470[0] != null ? bsnij2_59470[0].length : 0)+1-1)-1].length : 0)+1-1)-1].length : 0)+1-1)-1]));
																res_62194 = addInt(res_62194, 1);
															}
													} while(false);
												} while(false);
											} while(false);
											res_62200 = addInt(res_62200, 1);
										}
								} while(false);
							} while(false);
						} while(false);
						res_62205 = addInt(res_62205, 1);
					}
			} while(false);
		} while(false);
		k3_59638[0] = Math.pow(k3_59638[0], 5.9999999999999998e-01);
		u_59785[0] = Math.pow(u_59785[0], 2.0000000000000001e-01);
		q2_59783 = Math.pow(q_59782[0], 2.0000000000000000e+00);
		L25: do {
			var n_60006 = 0;
			var res_62211 = 13;
			L26: do {
					L27: while (true) {
					if (!(res_62211 <= 58)) break L27;
						n_60006 = res_62211;
						csn_59481[0][chckIndx(n_60006, 1, (csn_59481[0] != null ? csn_59481[0].length : 0)+1-1)-1] = (an_59068[chckIndx(n_60006, 1, (an_59068 != null ? an_59068.length : 0)+1-1)-1] * Math.pow(u_59785[0], un_59094[chckIndx(n_60006, 1, (un_59094 != null ? un_59094.length : 0)+1-1)-1]));
						if ((gn_59110[chckIndx(n_60006, 1, (gn_59110 != null ? gn_59110.length : 0)+1-1)-1] == 1)) {
						HEX2AHEX3D_60007(csn_59481[0], chckIndx(n_60006, 1, (csn_59481[0] != null ? csn_59481[0].length : 0)+1-1)-1, g_59781[0]);
						}
						
						if ((qn_59118[chckIndx(n_60006, 1, (qn_59118 != null ? qn_59118.length : 0)+1-1)-1] == 1)) {
						HEX2AHEX3D_60007(csn_59481[0], chckIndx(n_60006, 1, (csn_59481[0] != null ? csn_59481[0].length : 0)+1-1)-1, q2_59783);
						}
						
						if ((fn_59102[chckIndx(n_60006, 1, (fn_59102 != null ? fn_59102.length : 0)+1-1)-1] == 1)) {
						HEX2AHEX3D_60007(csn_59481[0], chckIndx(n_60006, 1, (csn_59481[0] != null ? csn_59481[0].length : 0)+1-1)-1, f_59784[0]);
						}
						
						res_62211 = addInt(res_62211, 1);
					}
			} while(false);
		} while(false);
	} while (false);

	
}

function HEX2DHEX3D_60424(x_60428, x_60428_Idx, y_60429) {
		x_60428[x_60428_Idx] = (x_60428[x_60428_Idx] - y_60429);

	
}

function alpha_rdetail_60284(itau_60286, idel_60287, temp_60288, density_60289) {
	var result_60290 = {Field0: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, Field1: {Field0: 0.0, Field1: 0.0}, Field2: {Field0: 0.0}};

		var ckd_60291 = 0.0;
		var bkd_60292 = 0.0;
		var dred_60293 = 0.0;
		var sum_60294 = [0.0];
		var s0_60295 = 0.0;
		var s1_60296 = 0.0;
		var s2_60297 = 0.0;
		var s3_60298 = 0.0;
		var rt_60299 = 0.0;
		var k_float_60300 = 0.0;
		var sum0_60306 = new Float64Array(58);
		var sum_b_60307 = new Float64Array(58);
		var coef_d1_60308 = new Float64Array(58);
		var coef_d2_60309 = new Float64Array(58);
		var coef_d3_60310 = new Float64Array(58);
		var coef_t1_60311 = new Float64Array(58);
		var coef_t2_60312 = new Float64Array(58);
		var dknn_60316 = new Float64Array(10);
		var expn_60320 = new Float64Array(5);
		if ((9.9999999999999995e-08 < abs_12649((temp_60288 - temp_old_60264[0])))) {
		L1: do {
			var n_60330 = 0;
			var res_62227 = 1;
			L2: do {
					L3: while (true) {
					if (!(res_62227 <= 58)) break L3;
						n_60330 = res_62227;
						tun_60270[0][chckIndx(n_60330, 1, (tun_60270[0] != null ? tun_60270[0].length : 0)+1-1)-1] = Math.pow(temp_60288, -(un_59094[chckIndx(n_60330, 1, (un_59094 != null ? un_59094.length : 0)+1-1)-1]));
						res_62227 = addInt(res_62227, 1);
					}
			} while(false);
		} while(false);
		}
		
		temp_old_60264[0] = temp_60288;
		dred_60293 = (k3_59638[0] * density_60289);
		dknn_60316[chckIndx(0, 0, (dknn_60316 != null ? dknn_60316.length : 0)+0-1)-0] = 1.0000000000000000e+00;
		L4: do {
			var n_60346 = 0;
			var res_62233 = 1;
			L5: do {
					L6: while (true) {
					if (!(res_62233 <= 9)) break L6;
						n_60346 = res_62233;
						dknn_60316[chckIndx(n_60346, 0, (dknn_60316 != null ? dknn_60316.length : 0)+0-1)-0] = (dred_60293 * dknn_60316[chckIndx(subInt(n_60346, 1), 0, (dknn_60316 != null ? dknn_60316.length : 0)+0-1)-0]);
						res_62233 = addInt(res_62233, 1);
					}
			} while(false);
		} while(false);
		expn_60320[chckIndx(0, 0, (expn_60320 != null ? expn_60320.length : 0)+0-1)-0] = 1.0000000000000000e+00;
		L7: do {
			var n_60362 = 0;
			var res_62239 = 1;
			L8: do {
					L9: while (true) {
					if (!(res_62239 <= 4)) break L9;
						n_60362 = res_62239;
						expn_60320[chckIndx(n_60362, 0, (expn_60320 != null ? expn_60320.length : 0)+0-1)-0] = Math.exp(-(dknn_60316[chckIndx(n_60362, 0, (dknn_60316 != null ? dknn_60316.length : 0)+0-1)-0]));
						res_62239 = addInt(res_62239, 1);
					}
			} while(false);
		} while(false);
		rt_60299 = (8.3145100000000003e+00 * temp_60288);
		L10: do {
			var n_60372 = 0;
			var res_62247 = 1;
			L11: do {
					L12: while (true) {
					if (!(res_62247 <= 58)) break L12;
						n_60372 = res_62247;
						coef_t1_60311[chckIndx(n_60372, 1, (coef_t1_60311 != null ? coef_t1_60311.length : 0)+1-1)-1] = (8.3145100000000003e+00 * (un_59094[chckIndx(n_60372, 1, (un_59094 != null ? un_59094.length : 0)+1-1)-1] - 1.0000000000000000e+00));
						coef_t2_60312[chckIndx(n_60372, 1, (coef_t2_60312 != null ? coef_t2_60312.length : 0)+1-1)-1] = (coef_t1_60311[chckIndx(n_60372, 1, (coef_t1_60311 != null ? coef_t1_60311.length : 0)+1-1)-1] * un_59094[chckIndx(n_60372, 1, (un_59094 != null ? un_59094.length : 0)+1-1)-1]);
						if ((n_60372 <= 18)) {
						sum_60294[0] = (bs_59476[0][chckIndx(n_60372, 1, (bs_59476[0] != null ? bs_59476[0].length : 0)+1-1)-1] * density_60289);
						if ((13 <= n_60372)) {
						HEX2BHEX3D_59875(sum_60294, 0, (-(csn_59481[0][chckIndx(n_60372, 1, (csn_59481[0] != null ? csn_59481[0].length : 0)+1-1)-1]) * dred_60293));
						}
						
						sum_b_60307[chckIndx(n_60372, 1, (sum_b_60307 != null ? sum_b_60307.length : 0)+1-1)-1] = (sum_60294[0] * tun_60270[0][chckIndx(n_60372, 1, (tun_60270[0] != null ? tun_60270[0].length : 0)+1-1)-1]);
						}
						
						if ((13 <= n_60372)) {
						k_float_60300 = kn_59087[chckIndx(n_60372, 1, (kn_59087 != null ? kn_59087.length : 0)+1-1)-1];
						sum0_60306[chckIndx(n_60372, 1, (sum0_60306 != null ? sum0_60306.length : 0)+1-1)-1] = (((csn_59481[0][chckIndx(n_60372, 1, (csn_59481[0] != null ? csn_59481[0].length : 0)+1-1)-1] * dknn_60316[chckIndx(bn_59079[chckIndx(n_60372, 1, (bn_59079 != null ? bn_59079.length : 0)+1-1)-1], 0, (dknn_60316 != null ? dknn_60316.length : 0)+0-1)-0]) * tun_60270[0][chckIndx(n_60372, 1, (tun_60270[0] != null ? tun_60270[0].length : 0)+1-1)-1]) * expn_60320[chckIndx(kn_59087[chckIndx(n_60372, 1, (kn_59087 != null ? kn_59087.length : 0)+1-1)-1], 0, (expn_60320 != null ? expn_60320.length : 0)+0-1)-0]);
						bkd_60292 = (bn_59079[chckIndx(n_60372, 1, (bn_59079 != null ? bn_59079.length : 0)+1-1)-1] - (k_float_60300 * dknn_60316[chckIndx(kn_59087[chckIndx(n_60372, 1, (kn_59087 != null ? kn_59087.length : 0)+1-1)-1], 0, (dknn_60316 != null ? dknn_60316.length : 0)+0-1)-0]));
						ckd_60291 = ((k_float_60300 * k_float_60300) * dknn_60316[chckIndx(kn_59087[chckIndx(n_60372, 1, (kn_59087 != null ? kn_59087.length : 0)+1-1)-1], 0, (dknn_60316 != null ? dknn_60316.length : 0)+0-1)-0]);
						coef_d1_60308[chckIndx(n_60372, 1, (coef_d1_60308 != null ? coef_d1_60308.length : 0)+1-1)-1] = bkd_60292;
						coef_d2_60309[chckIndx(n_60372, 1, (coef_d2_60309 != null ? coef_d2_60309.length : 0)+1-1)-1] = ((bkd_60292 * (bkd_60292 - 1.0000000000000000e+00)) - ckd_60291);
						coef_d3_60310[chckIndx(n_60372, 1, (coef_d3_60310 != null ? coef_d3_60310.length : 0)+1-1)-1] = (((bkd_60292 - 2.0000000000000000e+00) * coef_d2_60309[chckIndx(n_60372, 1, (coef_d2_60309 != null ? coef_d2_60309.length : 0)+1-1)-1]) + (ckd_60291 * ((1.0000000000000000e+00 - k_float_60300) - (2.0000000000000000e+00 * bkd_60292))));
						}
						
						res_62247 = addInt(res_62247, 1);
					}
			} while(false);
		} while(false);
		L13: do {
			var n_60393 = 0;
			var res_62253 = 1;
			L14: do {
					L15: while (true) {
					if (!(res_62253 <= 58)) break L15;
						n_60393 = res_62253;
						s0_60295 = (sum0_60306[chckIndx(n_60393, 1, (sum0_60306 != null ? sum0_60306.length : 0)+1-1)-1] + sum_b_60307[chckIndx(n_60393, 1, (sum_b_60307 != null ? sum_b_60307.length : 0)+1-1)-1]);
						s1_60296 = ((sum0_60306[chckIndx(n_60393, 1, (sum0_60306 != null ? sum0_60306.length : 0)+1-1)-1] * coef_d1_60308[chckIndx(n_60393, 1, (coef_d1_60308 != null ? coef_d1_60308.length : 0)+1-1)-1]) + sum_b_60307[chckIndx(n_60393, 1, (sum_b_60307 != null ? sum_b_60307.length : 0)+1-1)-1]);
						s2_60297 = (sum0_60306[chckIndx(n_60393, 1, (sum0_60306 != null ? sum0_60306.length : 0)+1-1)-1] * coef_d2_60309[chckIndx(n_60393, 1, (coef_d2_60309 != null ? coef_d2_60309.length : 0)+1-1)-1]);
						s3_60298 = (sum0_60306[chckIndx(n_60393, 1, (sum0_60306 != null ? sum0_60306.length : 0)+1-1)-1] * coef_d3_60310[chckIndx(n_60393, 1, (coef_d3_60310 != null ? coef_d3_60310.length : 0)+1-1)-1]);
						HEX2BHEX3D_59875(result_60290["Field0"], "Field0", (rt_60299 * s0_60295));
						HEX2BHEX3D_59875(result_60290["Field0"], "Field1", (rt_60299 * s1_60296));
						HEX2BHEX3D_59875(result_60290["Field0"], "Field2", (rt_60299 * s2_60297));
						HEX2BHEX3D_59875(result_60290["Field0"], "Field3", (rt_60299 * s3_60298));
						if ((0 < itau_60286)) {
						HEX2DHEX3D_60424(result_60290["Field1"], "Field0", (coef_t1_60311[chckIndx(n_60393, 1, (coef_t1_60311 != null ? coef_t1_60311.length : 0)+1-1)-1] * s0_60295));
						HEX2DHEX3D_60424(result_60290["Field1"], "Field1", (coef_t1_60311[chckIndx(n_60393, 1, (coef_t1_60311 != null ? coef_t1_60311.length : 0)+1-1)-1] * s1_60296));
						HEX2BHEX3D_59875(result_60290["Field2"], "Field0", (coef_t2_60312[chckIndx(n_60393, 1, (coef_t2_60312 != null ? coef_t2_60312.length : 0)+1-1)-1] * s0_60295));
						}
						
						res_62253 = addInt(res_62253, 1);
					}
			} while(false);
		} while(false);

	return result_60290;

}

function pressure_detail_60551(temp_60553, density_60554, comp_60555) {
	var result_60556 = {Field0: 0.0, Field1: 0.0};

		var alpha_r_60557 = {Field0: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, Field1: {Field0: 0.0, Field1: 0.0}, Field2: {Field0: 0.0}};
		x_terms_detail_59778(comp_60555);
		nimCopy(alpha_r_60557, alpha_rdetail_60284(0, 2, temp_60553, density_60554), NTI60078);
		result_60556.Field1 = (1.0000000000000000e+00 + ((alpha_r_60557.Field0.Field1 / 8.3145100000000003e+00) / temp_60553));
		result_60556.Field0 = (((density_60554 * 8.3145100000000003e+00) * temp_60553) * result_60556.Field1);
		d_pd_dsave_60508[0] = (((8.3145100000000003e+00 * temp_60553) + (2.0000000000000000e+00 * alpha_r_60557.Field0.Field1)) + alpha_r_60557.Field0.Field2);

	return result_60556;

}

function density_detail_60597(temp_60599, pressure_60600, comp_60601, density_60603) {
							var Tmp4;

	var result_60604 = {Field0: 0.0, Field1: 0, Field2: null};

	BeforeRet: do {
		var plog_60605 = 0.0;
		var vlog_60606 = [0.0];
		var dpdlv_60607 = 0.0;
		var vdiff_60608 = 0.0;
		var tolr_60609 = 0.0;
		var p_detail_60610 = {Field0: 0.0, Field1: 0.0};
		result_60604.Field1 = 0;
		result_60604.Field2 = nimCopy(null, [], NTI138);
		if ((abs_12649(pressure_60600) < 1.0000000000000001e-15)) {
		result_60604.Field0 = 0.0;
		break BeforeRet;
		}
		
		tolr_60609 = 9.9999999999999995e-08;
		if ((-1.0000000000000001e-15 < density_60603)) {
		result_60604.Field0 = ((pressure_60600 / 8.3145100000000003e+00) / temp_60599);
		}
		else {
			result_60604.Field0 = abs_12649(density_60603);
		}
		
		plog_60605 = Math.log(pressure_60600);
		vlog_60606[0] = -(Math.log(result_60604.Field0));
		L1: do {
			var it_60620 = 0;
			var res_62158 = 1;
			L2: do {
					L3: while (true) {
					if (!(res_62158 <= 20)) break L3;
						it_60620 = res_62158;
							if ((vlog_60606[0] < -7.0000000000000000e+00)) Tmp4 = true; else {								Tmp4 = (1.0000000000000000e+02 < vlog_60606[0]);							}						if (Tmp4) {
						result_60604.Field1 = 1;
						result_60604.Field2 = nimCopy(null, makeNimstrLit("Calculation failed to converge in DETAIL method, ideal gas density returned."), NTI138);
						result_60604.Field0 = ((pressure_60600 / 8.3145100000000003e+00) / temp_60599);
						break BeforeRet;
						}
						
						result_60604.Field0 = Math.exp(-(vlog_60606[0]));
						nimCopy(p_detail_60610, pressure_detail_60551(temp_60599, result_60604.Field0, comp_60601), NTI60502);
						if (((d_pd_dsave_60508[0] < 1.0000000000000001e-15) || (p_detail_60610.Field0 < 1.0000000000000001e-15))) {
						HEX2BHEX3D_59875(vlog_60606, 0, 1.0000000000000001e-01);
						}
						else {
							dpdlv_60607 = (-(result_60604.Field0) * d_pd_dsave_60508[0]);
							vdiff_60608 = (((Math.log(p_detail_60610.Field0) - plog_60605) * p_detail_60610.Field0) / dpdlv_60607);
							vlog_60606[0] = (vlog_60606[0] - vdiff_60608);
							if ((abs_12649(vdiff_60608) < tolr_60609)) {
							result_60604.Field0 = Math.exp(-(vlog_60606[0]));
							break BeforeRet;
							}
							
						}
						
						res_62158 = addInt(res_62158, 1);
					}
			} while(false);
		} while(false);
		result_60604.Field1 = 1;
		result_60604.Field2 = nimCopy(null, makeNimstrLit("Calculation failed to converge in DETAIL method, ideal gas density returned."), NTI138);
		result_60604.Field0 = ((pressure_60600 / 8.3145100000000003e+00) / temp_60599);
	} while (false);

	return result_60604;

}

function molar_mass_detail_60522(composition_60524) {
	var result_60525 = 0.0;

		L1: do {
			var i_60536 = 0;
			var percent_composition_60537 = 0.0;
			var i_62259 = 1;
			if ((i_62259 <= 21)) {
			L2: do {
					L3: while (true) {
					if (!true) break L3;
						i_60536 = i_62259;
						percent_composition_60537 = composition_60524[chckIndx(i_62259, 1, (composition_60524 != null ? composition_60524.length : 0)+1-1)-1];
						result_60525 = (result_60525 + (percent_composition_60537 * molar_masses_59029[chckIndx(i_60536, 1, (molar_masses_59029 != null ? molar_masses_59029.length : 0)+1-1)-1]));
						if ((21 <= i_62259)) {
						break L2;
						}
						
						i_62259 = addInt(i_62259, 1);
					}
			} while(false);
			}
			
		} while(false);

	return result_60525;

}

function alpha0detail_60124(temp_60126, density_60127, comp_60128) {
	var result_60129 = [{Field0: 0.0, Field1: 0.0, Field2: 0.0}];

		var log_t_60130 = 0.0;
		var log_d_60131 = 0.0;
		var log_hyp_60132 = 0.0;
		var th0t_60133 = 0.0;
		var logx_d_60134 = 0.0;
		var sum_hyp0_60135 = [0.0];
		var sum_hyp1_60136 = [0.0];
		var sum_hyp2_60137 = [0.0];
		var em_60138 = 0.0;
		var ep_60139 = 0.0;
		var hcn_60140 = 0.0;
		var hsn_60141 = 0.0;
		var th0_60142 = 0.0;
		var n0_60143 = 0.0;
		if ((1.0000000000000001e-15 < density_60127)) {
		log_d_60131 = Math.log(density_60127);
		}
		else {
			log_d_60131 = Math.log(1.0000000000000001e-15);
		}
		
		log_t_60130 = Math.log(temp_60126);
		L1: do {
			var i_60154 = 0;
			var gas_percentage_60155 = 0.0;
			var i_62270 = 1;
			if ((i_62270 <= 21)) {
			L2: do {
					L3: while (true) {
					if (!true) break L3;
						i_60154 = i_62270;
						gas_percentage_60155 = comp_60128[chckIndx(i_62270, 1, (comp_60128 != null ? comp_60128.length : 0)+1-1)-1];
						L4: do {
							if ((gas_percentage_60155 == 0.0)) {
							break L4;
							}
							
							logx_d_60134 = (log_d_60131 + Math.log(gas_percentage_60155));
							sum_hyp0_60135[0] = 0.0;
							sum_hyp1_60136[0] = 0.0;
							sum_hyp2_60137[0] = 0.0;
							L5: do {
								var j_60165 = 0;
								var res_62265 = 4;
								L6: do {
										L7: while (true) {
										if (!(res_62265 <= 7)) break L7;
											j_60165 = res_62265;
											L8: do {
												th0_60142 = th0i_59636[chckIndx(i_60154, 1, (th0i_59636 != null ? th0i_59636.length : 0)+1-1)-1][chckIndx(j_60165, 1, (th0i_59636[chckIndx(i_60154, 1, (th0i_59636 != null ? th0i_59636.length : 0)+1-1)-1] != null ? th0i_59636[chckIndx(i_60154, 1, (th0i_59636 != null ? th0i_59636.length : 0)+1-1)-1].length : 0)+1-1)-1];
												n0_60143 = n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1][chckIndx(j_60165, 1, (n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1] != null ? n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1].length : 0)+1-1)-1];
												if ((th0_60142 == 0.0)) {
												break L8;
												}
												
												th0t_60133 = (th0_60142 / temp_60126);
												ep_60139 = Math.exp(th0t_60133);
												em_60138 = (1.0000000000000000e+00 / ep_60139);
												hsn_60141 = ((ep_60139 - em_60138) / 2.0000000000000000e+00);
												hcn_60140 = ((ep_60139 + em_60138) / 2.0000000000000000e+00);
												if (((j_60165 == 4) || (j_60165 == 6))) {
												log_hyp_60132 = Math.log(abs_12649(hsn_60141));
												HEX2BHEX3D_59875(sum_hyp0_60135, 0, (n0_60143 * log_hyp_60132));
												HEX2BHEX3D_59875(sum_hyp1_60136, 0, (n0_60143 * (log_hyp_60132 - ((th0t_60133 * hcn_60140) / hsn_60141))));
												HEX2BHEX3D_59875(sum_hyp2_60137, 0, (n0_60143 * Math.pow((th0t_60133 / hsn_60141), 2.0000000000000000e+00)));
												}
												else {
													log_hyp_60132 = Math.log(abs_12649(hcn_60140));
													HEX2BHEX3D_59875(sum_hyp0_60135, 0, (-(n0_60143) * log_hyp_60132));
													HEX2BHEX3D_59875(sum_hyp1_60136, 0, (-(n0_60143) * (log_hyp_60132 - ((th0t_60133 * hsn_60141) / hcn_60140))));
													HEX2BHEX3D_59875(sum_hyp2_60137, 0, (n0_60143 * Math.pow((th0t_60133 / hcn_60140), 2.0000000000000000e+00)));
												}
												
											} while(false);
											res_62265 = addInt(res_62265, 1);
										}
								} while(false);
							} while(false);
							HEX2BHEX3D_59875(result_60129[0], "Field0", (gas_percentage_60155 * ((((logx_d_60134 + n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1][chckIndx(1, 1, (n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1] != null ? n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1].length : 0)+1-1)-1]) + (n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1][chckIndx(2, 1, (n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1] != null ? n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1].length : 0)+1-1)-1] / temp_60126)) - (n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1][chckIndx(3, 1, (n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1] != null ? n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1].length : 0)+1-1)-1] * log_t_60130)) + sum_hyp0_60135[0])));
							HEX2BHEX3D_59875(result_60129[0], "Field1", (gas_percentage_60155 * (((logx_d_60134 + n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1][chckIndx(1, 1, (n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1] != null ? n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1].length : 0)+1-1)-1]) - (n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1][chckIndx(3, 1, (n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1] != null ? n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1].length : 0)+1-1)-1] * (1.0000000000000000e+00 + log_t_60130))) + sum_hyp1_60136[0])));
							HEX2BHEX3D_59875(result_60129[0], "Field2", (-(gas_percentage_60155) * (n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1][chckIndx(3, 1, (n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1] != null ? n0i_59581[chckIndx(i_60154, 1, (n0i_59581 != null ? n0i_59581.length : 0)+1-1)-1].length : 0)+1-1)-1] + sum_hyp2_60137[0])));
						} while(false);
						if ((21 <= i_62270)) {
						break L2;
						}
						
						i_62270 = addInt(i_62270, 1);
					}
			} while(false);
			}
			
		} while(false);
		HEX2AHEX3D_60007(result_60129[0], "Field0", (8.3145100000000003e+00 * temp_60126));
		HEX2AHEX3D_60007(result_60129[0], "Field1", 8.3145100000000003e+00);
		HEX2AHEX3D_60007(result_60129[0], "Field2", 8.3145100000000003e+00);

	return result_60129[0];

}

function properties_detail_60713(temp_60715, density_60716, comp_60717) {
	var result_60718 = {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, Field4: 0.0, Field5: 0.0, Field6: 0.0, Field7: 0.0, Field8: 0.0, Field9: 0.0, Field10: 0.0, Field11: 0.0, Field12: 0.0};

		var alpha0_60719 = {Field0: 0.0, Field1: 0.0, Field2: 0.0};
		var alpha_r_60720 = {Field0: {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0}, Field1: {Field0: 0.0, Field1: 0.0}, Field2: {Field0: 0.0}};
		var a_60721 = 0.0;
		var rt_60722 = 0.0;
		result_60718.Field0 = molar_mass_detail_60522(comp_60717);
		x_terms_detail_59778(comp_60717);
		nimCopy(alpha0_60719, alpha0detail_60124(temp_60715, density_60716, comp_60717), NTI60070);
		nimCopy(alpha_r_60720, alpha_rdetail_60284(2, 3, temp_60715, density_60716), NTI60078);
		rt_60722 = (8.3145100000000003e+00 * temp_60715);
		result_60718.Field2 = (1.0000000000000000e+00 + (alpha_r_60720.Field0.Field1 / rt_60722));
		result_60718.Field1 = ((density_60716 * rt_60722) * result_60718.Field2);
		result_60718.Field3.Field0 = ((rt_60722 + (2.0000000000000000e+00 * alpha_r_60720.Field0.Field1)) + alpha_r_60720.Field0.Field2);
		result_60718.Field3.Field3 = ((density_60716 * 8.3145100000000003e+00) + (density_60716 * alpha_r_60720.Field1.Field1));
		a_60721 = (alpha0_60719.Field0 + alpha_r_60720.Field0.Field0);
		result_60718.Field6 = (-(alpha0_60719.Field1) - alpha_r_60720.Field1.Field0);
		result_60718.Field4 = (a_60721 + (temp_60715 * result_60718.Field6));
		result_60718.Field7 = -((alpha0_60719.Field2 + alpha_r_60720.Field2.Field0));
		if ((1.0000000000000001e-15 < density_60716)) {
		result_60718.Field5 = (result_60718.Field4 + (result_60718.Field1 / density_60716));
		result_60718.Field10 = (a_60721 + (result_60718.Field1 / density_60716));
		result_60718.Field8 = (result_60718.Field7 + ((temp_60715 * Math.pow((result_60718.Field3.Field3 / density_60716), 2.0000000000000000e+00)) / result_60718.Field3.Field0));
		result_60718.Field3.Field1 = ((((2.0000000000000000e+00 * alpha_r_60720.Field0.Field1) + (4.0000000000000000e+00 * alpha_r_60720.Field0.Field2)) + alpha_r_60720.Field0.Field3) / density_60716);
		result_60718.Field11 = ((((((temp_60715 / density_60716) * result_60718.Field3.Field3) / result_60718.Field3.Field0) - 1.0000000000000000e+00) / result_60718.Field8) / density_60716);
		}
		else {
			result_60718.Field5 = (result_60718.Field4 + rt_60722);
			result_60718.Field10 = (a_60721 + rt_60722);
			result_60718.Field8 = (result_60718.Field7 + 8.3145100000000003e+00);
			result_60718.Field3.Field1 = 0.0;
			result_60718.Field11 = 1.0000000000000000e+20;
		}
		
		result_60718.Field9 = ((((1.0000000000000000e+03 * result_60718.Field8) / result_60718.Field7) * result_60718.Field3.Field0) / result_60718.Field0);
		if ((result_60718.Field9 < 0.0)) {
		result_60718.Field9 = 0.0;
		}
		
		result_60718.Field9 = Math.sqrt(result_60718.Field9);
		result_60718.Field12 = (((result_60718.Field9 * result_60718.Field9) * result_60718.Field0) / ((rt_60722 * 1.0000000000000000e+03) * result_60718.Field2));
		result_60718.Field3.Field2 = 0.0;

	return result_60718;

}

function thermal_expansion_61084(alpha_61086, diameter_61087, reference_temp_61088, flow_temp_61089) {
	var result_61090 = 0.0;

		result_61090 = (diameter_61087 * (1.0000000000000000e+00 + (alpha_61086 * (flow_temp_61089 - reference_temp_61088))));

	return result_61090;

}

function diameter_ratio_61105(orifice_plate_bore_diameter_61107, meter_internal_diameter_61108) {
	var result_61109 = 0.0;

		result_61109 = (orifice_plate_bore_diameter_61107 / meter_internal_diameter_61108);

	return result_61109;

}

function velocity_factor_61123(beta_61125) {
	var result_61126 = 0.0;

		result_61126 = (1.0000000000000000e+00 / Math.sqrt((1.0000000000000000e+00 - Math.pow(beta_61125, 4.0000000000000000e+00))));

	return result_61126;

}

function discharge_constants_61192(meter_internal_diameter_61194, beta_61195) {
	var result_61196 = {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0, Field4: 0.0};

		var location1_61197 = 0.0;
		var location2_61198 = 0.0;
		var dam_height_61199 = 0.0;
		var upstream_tap_correction_61200 = 0.0;
		var downstream_tap_correction_61201 = 0.0;
		var small_pipe_correction_61202 = 0.0;
		location1_61197 = (2.5399999999999999e-02 / meter_internal_diameter_61194);
		location2_61198 = (2.5399999999999999e-02 / meter_internal_diameter_61194);
		dam_height_61199 = ((2.0000000000000000e+00 * location2_61198) / (1.0000000000000000e+00 - beta_61195));
		upstream_tap_correction_61200 = ((((4.3299999999999998e-02 + (7.1199999999999999e-02 * Math.pow(2.7182800000000000e+00, (-8.5000000000000000e+00 * location1_61197)))) + (-1.1450000000000000e-01 * Math.pow(2.7182800000000000e+00, (-6.0000000000000000e+00 * location2_61198)))) * Math.pow(beta_61195, 4.0000000000000000e+00)) / (1.0000000000000000e+00 - Math.pow(beta_61195, 4.0000000000000000e+00)));
		downstream_tap_correction_61201 = ((-1.1599999999999999e-02 * (dam_height_61199 + (-5.2000000000000002e-01 * Math.pow(dam_height_61199, 1.3000000000000000e+00)))) * Math.pow(beta_61195, 1.1000000000000001e+00));
		if ((7.1119999999999989e-02 < meter_internal_diameter_61194)) {
		small_pipe_correction_61202 = 0.0;
		}
		else {
			small_pipe_correction_61202 = ((3.0000000000000001e-03 * (1.0000000000000000e+00 - beta_61195)) * (2.7999999999999998e+00 - (meter_internal_diameter_61194 / 2.5399999999999999e-02)));
		}
		
		result_61196.Field0 = (((((5.9609999999999996e-01 + (2.9100000000000001e-02 * Math.pow(beta_61195, 2.0000000000000000e+00))) + (-2.2900000000000001e-01 * Math.pow(beta_61195, 8.0000000000000000e+00))) + upstream_tap_correction_61200) + downstream_tap_correction_61201) + small_pipe_correction_61202);
		result_61196.Field1 = ((5.1099999999999995e-04 * Math.pow(beta_61195, 6.9999999999999996e-01)) * Math.pow(2.5000000000000000e+02, 6.9999999999999996e-01));
		result_61196.Field2 = ((2.1000000000000001e-02 * Math.pow(beta_61195, 4.0000000000000000e+00)) * Math.pow(2.5000000000000000e+02, 3.4999999999999998e-01));
		result_61196.Field3 = ((((4.8999999999999998e-03 * Math.pow(beta_61195, 4.0000000000000000e+00)) * Math.pow(beta_61195, 8.0000000000000004e-01)) * Math.pow(4.7500000000000000e+00, 8.0000000000000004e-01)) * Math.pow(2.5000000000000000e+02, 3.4999999999999998e-01));
		result_61196.Field4 = ((((-2.3000000000000001e-01 * upstream_tap_correction_61200) + (-1.4000000000000001e-01 * downstream_tap_correction_61201)) * Math.pow(beta_61195, 8.0000000000000004e-01)) * Math.pow(4.7500000000000000e+00, 8.0000000000000004e-01));

	return result_61196;

}

function mol_lto_kgm3_62036(molar_mass_62038, density_62039) {
	var result_62040 = 0.0;

		result_62040 = (density_62039 * molar_mass_62038);

	return result_62040;

}

function expansion_factor_61243(beta_61245, differential_pressure_61246, flow_pressure_61247, isentropic_exponent_61248) {
	var result_61249 = 0.0;

		var differential_to_flow_pressure_ratio_61250 = 0.0;
		var expansion_factor_pressure_const_61251 = 0.0;
		differential_to_flow_pressure_ratio_61250 = (differential_pressure_61246 / flow_pressure_61247);
		expansion_factor_pressure_const_61251 = ((4.0999999999999998e-01 + (3.4999999999999998e-01 * Math.pow(beta_61245, 4.0000000000000000e+00))) / isentropic_exponent_61248);
		result_61249 = (1.0000000000000000e+00 - (expansion_factor_pressure_const_61251 * differential_to_flow_pressure_ratio_61250));

	return result_61249;

}

function iteration_flow_factor_61268(orifice_plate_bore_diameter_61270, meter_internal_diameter_61271, differential_pressure_61272, velocity_factor_61273, viscocity_61274, density_61275, expansion_factor_61276) {
	var result_61277 = 0.0;

		var flow_ic_61278 = 0.0;
		var flow_ip_61279 = 0.0;
		flow_ic_61278 = (((4.0000000000000000e+03 * meter_internal_diameter_61271) * viscocity_61274) / ((velocity_factor_61273 * expansion_factor_61276) * Math.pow(orifice_plate_bore_diameter_61270, 2.0000000000000000e+00)));
		flow_ip_61279 = Math.sqrt(((2.0000000000000000e+00 * density_61275) * differential_pressure_61272));
		if ((flow_ic_61278 < (1.0000000000000000e+03 * flow_ip_61279))) {
		result_61277 = (flow_ic_61278 / flow_ip_61279);
		}
		else {
			result_61277 = 1.0000000000000000e+03;
		}
		

	return result_61277;

}

function discharge_coefficient_61324(discharge_coefs_61326, iteration_flow_factor_61327) {
	var result_61328 = {Field0: 0.0, Field1: false};

		var colontmp__62273 = {Field0: 0.0, Field1: 0.0, Field2: 0.0, Field3: 0.0, Field4: 0.0};
		var d0_61329 = 0.0;
		var d1_61330 = 0.0;
		var d2_61331 = 0.0;
		var d3_61332 = 0.0;
		var d4_61333 = 0.0;
		nimCopy(colontmp__62273, discharge_coefs_61326, NTI61142);
		d0_61329 = colontmp__62273["Field0"];
		d1_61330 = colontmp__62273["Field1"];
		d2_61331 = colontmp__62273["Field2"];
		d3_61332 = colontmp__62273["Field3"];
		d4_61333 = colontmp__62273["Field4"];
		var coef_61334 = 1.0000000000000000e+00;
		var reynolds_61335 = 0.0;
		var r35_61336 = 0.0;
		var r70_61337 = 0.0;
		var rlbr_61338 = 0.0;
		var r80_61339 = 0.0;
		var f_c_61340 = 0.0;
		var d_c_61341 = 0.0;
		result_61328.Field0 = d0_61329;
		result_61328.Field1 = false;
		L1: do {
				L2: while (true) {
				if (!(5.0000000000000004e-06 <= abs_12649(coef_61334))) break L2;
					reynolds_61335 = (iteration_flow_factor_61327 / result_61328.Field0);
					r80_61339 = Math.pow(abs_12649(reynolds_61335), 8.0000000000000004e-01);
					if ((reynolds_61335 < 1.1421393372561650e+00)) {
					r35_61336 = Math.pow(abs_12649(reynolds_61335), 3.4999999999999998e-01);
					if ((reynolds_61335 < 0.0)) {
					r35_61336 = -(r35_61336);
					r80_61339 = -(r80_61339);
					}
					
					f_c_61340 = ((d0_61329 + (((d1_61330 * r35_61336) + (d3_61332 * r80_61339)) * r35_61336)) + (d4_61333 * r80_61339));
					d_c_61341 = ((((((6.9999999999999996e-01 * d1_61330) * r35_61336) + (3.4999999999999998e-01 * d2_61331)) + ((1.1499999999999999e+00 * d3_61332) * r80_61339)) * r35_61336) + ((8.0000000000000004e-01 * d4_61333) * r80_61339));
					}
					else {
						r70_61337 = Math.pow(reynolds_61335, 6.9999999999999996e-01);
						rlbr_61338 = (3.7643876933201650e+00 / reynolds_61335);
						f_c_61340 = (((d0_61329 + (d1_61330 * r70_61337)) + ((d2_61331 + (d3_61332 * r80_61339)) * (4.3435242615232674e+00 - rlbr_61338))) + (d4_61333 * r80_61339));
						d_c_61341 = (((((6.9999999999999996e-01 * d1_61330) * r70_61337) + ((d2_61331 + (d3_61332 * r80_61339)) * rlbr_61338)) + (((8.0000000000000004e-01 * d3_61332) * (4.3435242615232674e+00 - rlbr_61338)) * r80_61339)) + ((8.0000000000000004e-01 * d4_61333) * r80_61339));
					}
					
					coef_61334 = ((result_61328.Field0 - f_c_61340) / (1.0000000000000000e+00 + (d_c_61341 / result_61328.Field0)));
					result_61328.Field0 = (result_61328.Field0 - coef_61334);
				}
		} while(false);
		if ((1.0000000000000000e+00 < reynolds_61335)) {
		result_61328.Field1 = true;
		}
		

	return result_61328;

}

function mass_flow_61373(discharge_coef_61375, orifice_plate_bore_diameter_61376, differential_pressure_61377, velocity_factor_61378, density_61379, expansion_factor_61380) {
	var result_61381 = 0.0;

		var flow_mass_61382 = ((7.8539816339744828e-01 * velocity_factor_61378) * Math.pow(orifice_plate_bore_diameter_61376, 2.0000000000000000e+00));
		result_61381 = (((flow_mass_61382 * discharge_coef_61375) * expansion_factor_61380) * Math.sqrt(((2.0000000000000000e+00 * density_61379) * differential_pressure_61377)));

	return result_61381;

}

function actual_flow_61397(discharge_coef_61399, orifice_plate_bore_diameter_61400, differential_pressure_61401, velocity_factor_61402, density_61403, expansion_factor_61404) {
	var result_61405 = 0.0;

		result_61405 = (mass_flow_61373(discharge_coef_61399, orifice_plate_bore_diameter_61400, differential_pressure_61401, velocity_factor_61402, density_61403, expansion_factor_61404) / density_61403);

	return result_61405;

}

function base_flow_61419(discharge_coef_61421, orifice_plate_bore_diameter_61422, differential_pressure_61423, velocity_factor_61424, base_density_61425, density_61426, expansion_factor_61427) {
	var result_61428 = 0.0;

		result_61428 = (mass_flow_61373(discharge_coef_61421, orifice_plate_bore_diameter_61422, differential_pressure_61423, velocity_factor_61424, density_61426, expansion_factor_61427) / base_density_61425);

	return result_61428;

}

function orificeCalculator(flow_temp_62056, flow_pressure_62057, differential_pressure_62058, composition_62059, pipe_internal_diameter_62060, orifice_internal_diameter_62061, alpha_pipe_62062, alpha_orifice_62063, base_temp_62064, base_pressure_62065) {
	var result_62066 = {Field0: 0.0, Field1: 0.0, Field2: 0.0};

		var f_t_62067 = (flow_temp_62056 + 2.7314999999999998e+02);
		var b_t_62068 = (base_temp_62064 + 2.7314999999999998e+02);
		var pipe_id_62070 = (pipe_internal_diameter_62060 / 1.0000000000000000e+03);
		var orifice_id_62072 = (orifice_internal_diameter_62061 / 1.0000000000000000e+03);
		var pipe_a_62073 = (alpha_pipe_62062 * Math.pow(1.0000000000000000e+01, -6.0000000000000000e+00));
		var orifice_a_62074 = (alpha_orifice_62063 * Math.pow(1.0000000000000000e+01, -6.0000000000000000e+00));
		var base_density_62076 = nimCopy(null, density_detail_60597(b_t_62068, (base_pressure_62065 / 1.0000000000000000e+03), composition_62059, -1.0000000000000000e+00), NTI60589);
		var base_properties_62077 = nimCopy(null, properties_detail_60713(b_t_62068, base_density_62076.Field0, composition_62059), NTI60676);
		var density_62079 = nimCopy(null, density_detail_60597(f_t_62067, (flow_pressure_62057 / 1.0000000000000000e+03), composition_62059, -1.0000000000000000e+00), NTI60589);
		var properties_62080 = nimCopy(null, properties_detail_60713(f_t_62067, density_62079.Field0, composition_62059), NTI60676);
		var orifice_diameter_62081 = thermal_expansion_61084(orifice_a_62074, orifice_id_62072, 2.9314999999999998e+02, f_t_62067);
		var meter_diameter_62082 = thermal_expansion_61084(pipe_a_62073, pipe_id_62070, 2.9314999999999998e+02, f_t_62067);
		var beta_62083 = diameter_ratio_61105(orifice_diameter_62081, meter_diameter_62082);
		var velocity_factor_62084 = velocity_factor_61123(beta_62083);
		var discharge_coefs_62085 = nimCopy(null, discharge_constants_61192(meter_diameter_62082, beta_62083), NTI61142);
		var kappa_62086 = 0.0;
		var si_base_density_62087 = mol_lto_kgm3_62036(base_properties_62077.Field0, base_density_62076.Field0);
		var si_density_62088 = mol_lto_kgm3_62036(properties_62080.Field0, density_62079.Field0);
		if ((0.0 < properties_62080.Field12)) {
		kappa_62086 = properties_62080.Field12;
		}
		else {
			kappa_62086 = 1.0000000000000000e+00;
		}
		
		var expansion_factor_62091 = expansion_factor_61243(beta_62083, differential_pressure_62058, flow_pressure_62057, kappa_62086);
		var iteration_flow_factor_62093 = iteration_flow_factor_61268(orifice_diameter_62081, meter_diameter_62082, differential_pressure_62058, velocity_factor_62084, 1.0267999999999999e-05, si_density_62088, expansion_factor_62091);
		var discharge_coefficient_62094 = nimCopy(null, discharge_coefficient_61324(discharge_coefs_62085, iteration_flow_factor_62093), NTI61302);
		var colontmp__62154 = mass_flow_61373(discharge_coefficient_62094.Field0, orifice_diameter_62081, differential_pressure_62058, velocity_factor_62084, si_density_62088, expansion_factor_62091);
		var colontmp__62155 = actual_flow_61397(discharge_coefficient_62094.Field0, orifice_diameter_62081, differential_pressure_62058, velocity_factor_62084, si_density_62088, expansion_factor_62091);
		var colontmp__62156 = base_flow_61419(discharge_coefficient_62094.Field0, orifice_diameter_62081, differential_pressure_62058, velocity_factor_62084, si_base_density_62087, si_density_62088, expansion_factor_62091);
		nimCopy(result_62066, {Field0: colontmp__62154, Field1: colontmp__62155, Field2: colontmp__62156}, NTI62028);

	return result_62066;

}
module.exports = orificeCalculator
